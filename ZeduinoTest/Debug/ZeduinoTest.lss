
ZeduinoTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00800100  00000c58  00000cec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c58  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001c  00800116  00800116  00000d02  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d02  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d60  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  00000da0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000139f  00000000  00000000  00000e18  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a92  00000000  00000000  000021b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006b1  00000000  00000000  00002c49  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000108  00000000  00000000  000032fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008ae  00000000  00000000  00003404  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000655  00000000  00000000  00003cb2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  00004307  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 e5       	ldi	r30, 0x58	; 88
  7c:	fc e0       	ldi	r31, 0x0C	; 12
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 31       	cpi	r26, 0x16	; 22
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e1       	ldi	r26, 0x16	; 22
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a2 33       	cpi	r26, 0x32	; 50
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 10 02 	call	0x420	; 0x420 <main>
  9e:	0c 94 2a 06 	jmp	0xc54	; 0xc54 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <_Z12uart_putcharcP6__file>:
		void log(const char *format, ...) {
			va_list args;
			va_start(args, format);
			printf(format, args);
			va_end(args);
		}
  a6:	cf 93       	push	r28
  a8:	c8 2f       	mov	r28, r24
  aa:	8a 30       	cpi	r24, 0x0A	; 10
  ac:	19 f4       	brne	.+6      	; 0xb4 <_Z12uart_putcharcP6__file+0xe>
  ae:	8d e0       	ldi	r24, 0x0D	; 13
  b0:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z12uart_putcharcP6__file>
  b4:	e0 ec       	ldi	r30, 0xC0	; 192
  b6:	f0 e0       	ldi	r31, 0x00	; 0
  b8:	80 81       	ld	r24, Z
  ba:	85 ff       	sbrs	r24, 5
  bc:	fd cf       	rjmp	.-6      	; 0xb8 <_Z12uart_putcharcP6__file+0x12>
  be:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
  c2:	80 e0       	ldi	r24, 0x00	; 0
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	cf 91       	pop	r28
  c8:	08 95       	ret

000000ca <_Z12uart_getcharP6__file>:
  ca:	e0 ec       	ldi	r30, 0xC0	; 192
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	80 81       	ld	r24, Z
  d0:	88 23       	and	r24, r24
  d2:	ec f7       	brge	.-6      	; 0xce <_Z12uart_getcharP6__file+0x4>
  d4:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	08 95       	ret

000000dc <_ZN7zeduino4util8delay_msEj>:
  dc:	00 97       	sbiw	r24, 0x00	; 0
  de:	41 f0       	breq	.+16     	; 0xf0 <_ZN7zeduino4util8delay_msEj+0x14>
  e0:	ef e9       	ldi	r30, 0x9F	; 159
  e2:	ff e0       	ldi	r31, 0x0F	; 15
  e4:	31 97       	sbiw	r30, 0x01	; 1
  e6:	f1 f7       	brne	.-4      	; 0xe4 <_ZN7zeduino4util8delay_msEj+0x8>
  e8:	00 c0       	rjmp	.+0      	; 0xea <_ZN7zeduino4util8delay_msEj+0xe>
  ea:	00 00       	nop
  ec:	01 97       	sbiw	r24, 0x01	; 1
  ee:	c1 f7       	brne	.-16     	; 0xe0 <_ZN7zeduino4util8delay_msEj+0x4>
  f0:	08 95       	ret

000000f2 <_ZN7zeduino4util8delay_usEj>:
  f2:	00 97       	sbiw	r24, 0x00	; 0
  f4:	31 f0       	breq	.+12     	; 0x102 <_ZN7zeduino4util8delay_usEj+0x10>
  f6:	25 e0       	ldi	r18, 0x05	; 5
  f8:	2a 95       	dec	r18
  fa:	f1 f7       	brne	.-4      	; 0xf8 <_ZN7zeduino4util8delay_usEj+0x6>
  fc:	00 00       	nop
  fe:	01 97       	sbiw	r24, 0x01	; 1
 100:	d1 f7       	brne	.-12     	; 0xf6 <_ZN7zeduino4util8delay_usEj+0x4>
 102:	08 95       	ret

00000104 <_Z9uart_initv>:
 104:	ea e1       	ldi	r30, 0x1A	; 26
 106:	f1 e0       	ldi	r31, 0x01	; 1
 108:	83 e5       	ldi	r24, 0x53	; 83
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	91 87       	std	Z+9, r25	; 0x09
 10e:	80 87       	std	Z+8, r24	; 0x08
 110:	85 e6       	ldi	r24, 0x65	; 101
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	93 87       	std	Z+11, r25	; 0x0b
 116:	82 87       	std	Z+10, r24	; 0x0a
 118:	83 e0       	ldi	r24, 0x03	; 3
 11a:	83 83       	std	Z+3, r24	; 0x03
 11c:	15 86       	std	Z+13, r1	; 0x0d
 11e:	14 86       	std	Z+12, r1	; 0x0c
 120:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 124:	87 e6       	ldi	r24, 0x67	; 103
 126:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 12a:	a0 ec       	ldi	r26, 0xC0	; 192
 12c:	b0 e0       	ldi	r27, 0x00	; 0
 12e:	8c 91       	ld	r24, X
 130:	8d 7f       	andi	r24, 0xFD	; 253
 132:	8c 93       	st	X, r24
 134:	86 e0       	ldi	r24, 0x06	; 6
 136:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 13a:	88 e1       	ldi	r24, 0x18	; 24
 13c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 140:	ac e2       	ldi	r26, 0x2C	; 44
 142:	b1 e0       	ldi	r27, 0x01	; 1
 144:	13 96       	adiw	r26, 0x03	; 3
 146:	fc 93       	st	X, r31
 148:	ee 93       	st	-X, r30
 14a:	12 97       	sbiw	r26, 0x02	; 2
 14c:	ed 93       	st	X+, r30
 14e:	fc 93       	st	X, r31
 150:	08 95       	ret

00000152 <_Z5setupv>:
			ENABLED, DISABLED
		};
		
		void mode(EPort port, EMode m) {
			if (m == INPUT) clr_bit(fcrio(port), nmr(port));
			else if (m == OUTPUT) set_bit(fcrio(port), nmr(port));
 152:	52 9a       	sbi	0x0a, 2	; 10
 154:	25 9a       	sbi	0x04, 5	; 4
typedef int16_t int16;
typedef uint8_t uint8;
typedef uint16_t uint16;

void * operator new(size_t size) {
	return malloc(size);	
 156:	84 e0       	ldi	r24, 0x04	; 4
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	0e 94 2b 02 	call	0x456	; 0x456 <malloc>
		class Sonar : public Component {
		
			private: const EPort _triggerPort, _echoPort;
			private: uint16 count;
			
			public: Sonar(EPort triggerPort, EPort echoPort) : _triggerPort(triggerPort), _echoPort(echoPort) {}
 15e:	22 e0       	ldi	r18, 0x02	; 2
 160:	fc 01       	movw	r30, r24
 162:	20 83       	st	Z, r18
 164:	23 e0       	ldi	r18, 0x03	; 3
 166:	21 83       	std	Z+1, r18	; 0x01
void setup() {
	
	port::mode(TRIGGER, OUTPUT);
	port::mode(LED, OUTPUT);
	
	sonar = new component::Sonar(TRIGGER, ECHO);
 168:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <sonar+0x1>
 16c:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <sonar>
 170:	81 e0       	ldi	r24, 0x01	; 1
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	0e 94 2b 02 	call	0x456	; 0x456 <malloc>
		
		class Led : public Component {
			
			private: const EPort _port;
			
			public: Led(EPort port) : _port(port) {}
 178:	2d e0       	ldi	r18, 0x0D	; 13
 17a:	fc 01       	movw	r30, r24
 17c:	20 83       	st	Z, r18
	led = new component::Led(LED);
 17e:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <__data_end+0x1>
 182:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <__data_end>
		inline EMode get_mode(EPort port) {
			return (EMode)tst_bit(fcrio(port), nmr(port));
		}
		
		inline void enable(EPort port) {
			set_bit(fcrof(port), nmr(port));
 186:	2d 9a       	sbi	0x05, 5	; 5
 188:	08 95       	ret

0000018a <_Z4loopv>:
	
	led->TurnOn();
	
}

void loop() {
 18a:	cf 93       	push	r28
 18c:	df 93       	push	r29
	uint16 distance = sonar->ReadDistance();
 18e:	c0 91 18 01 	lds	r28, 0x0118	; 0x800118 <sonar>
 192:	d0 91 19 01 	lds	r29, 0x0119	; 0x800119 <sonar+0x1>
			
			public: Sonar(EPort triggerPort, EPort echoPort) : _triggerPort(triggerPort), _echoPort(echoPort) {}
				
			public: uint16 ReadDistance() {
				
				port::enable(_triggerPort);
 196:	88 81       	ld	r24, Y
 198:	88 30       	cpi	r24, 0x08	; 8
 19a:	70 f4       	brcc	.+28     	; 0x1b8 <_Z4loopv+0x2e>
 19c:	4b b1       	in	r20, 0x0b	; 11
 19e:	87 70       	andi	r24, 0x07	; 7
 1a0:	21 e0       	ldi	r18, 0x01	; 1
 1a2:	30 e0       	ldi	r19, 0x00	; 0
 1a4:	b9 01       	movw	r22, r18
 1a6:	02 c0       	rjmp	.+4      	; 0x1ac <_Z4loopv+0x22>
 1a8:	66 0f       	add	r22, r22
 1aa:	77 1f       	adc	r23, r23
 1ac:	8a 95       	dec	r24
 1ae:	e2 f7       	brpl	.-8      	; 0x1a8 <_Z4loopv+0x1e>
 1b0:	cb 01       	movw	r24, r22
 1b2:	84 2b       	or	r24, r20
 1b4:	8b b9       	out	0x0b, r24	; 11
 1b6:	0d c0       	rjmp	.+26     	; 0x1d2 <_Z4loopv+0x48>
 1b8:	45 b1       	in	r20, 0x05	; 5
 1ba:	87 70       	andi	r24, 0x07	; 7
 1bc:	21 e0       	ldi	r18, 0x01	; 1
 1be:	30 e0       	ldi	r19, 0x00	; 0
 1c0:	f9 01       	movw	r30, r18
 1c2:	02 c0       	rjmp	.+4      	; 0x1c8 <_Z4loopv+0x3e>
 1c4:	ee 0f       	add	r30, r30
 1c6:	ff 1f       	adc	r31, r31
 1c8:	8a 95       	dec	r24
 1ca:	e2 f7       	brpl	.-8      	; 0x1c4 <_Z4loopv+0x3a>
 1cc:	cf 01       	movw	r24, r30
 1ce:	84 2b       	or	r24, r20
 1d0:	85 b9       	out	0x05, r24	; 5
				util::delay_us(10);
 1d2:	8a e0       	ldi	r24, 0x0A	; 10
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	0e 94 79 00 	call	0xf2	; 0xf2 <_ZN7zeduino4util8delay_usEj>
				port::disable(_triggerPort);
 1da:	88 81       	ld	r24, Y
			if (b) set_bit(fcrof(port), nmr(port));
			else clr_bit(fcrof(port), nmr(port));
		}
		
		inline void disable(EPort port) {
			clr_bit(fcrof(port), nmr(port));
 1dc:	88 30       	cpi	r24, 0x08	; 8
 1de:	78 f4       	brcc	.+30     	; 0x1fe <_Z4loopv+0x74>
 1e0:	4b b1       	in	r20, 0x0b	; 11
 1e2:	87 70       	andi	r24, 0x07	; 7
 1e4:	21 e0       	ldi	r18, 0x01	; 1
 1e6:	30 e0       	ldi	r19, 0x00	; 0
 1e8:	b9 01       	movw	r22, r18
 1ea:	02 c0       	rjmp	.+4      	; 0x1f0 <_Z4loopv+0x66>
 1ec:	66 0f       	add	r22, r22
 1ee:	77 1f       	adc	r23, r23
 1f0:	8a 95       	dec	r24
 1f2:	e2 f7       	brpl	.-8      	; 0x1ec <_Z4loopv+0x62>
 1f4:	cb 01       	movw	r24, r22
 1f6:	80 95       	com	r24
 1f8:	84 23       	and	r24, r20
 1fa:	8b b9       	out	0x0b, r24	; 11
 1fc:	0e c0       	rjmp	.+28     	; 0x21a <_Z4loopv+0x90>
 1fe:	45 b1       	in	r20, 0x05	; 5
 200:	87 70       	andi	r24, 0x07	; 7
 202:	21 e0       	ldi	r18, 0x01	; 1
 204:	30 e0       	ldi	r19, 0x00	; 0
 206:	f9 01       	movw	r30, r18
 208:	02 c0       	rjmp	.+4      	; 0x20e <_Z4loopv+0x84>
 20a:	ee 0f       	add	r30, r30
 20c:	ff 1f       	adc	r31, r31
 20e:	8a 95       	dec	r24
 210:	e2 f7       	brpl	.-8      	; 0x20a <_Z4loopv+0x80>
 212:	cf 01       	movw	r24, r30
 214:	80 95       	com	r24
 216:	84 23       	and	r24, r20
 218:	85 b9       	out	0x05, r24	; 5
				
				while (!port::read(_echoPort));
 21a:	49 81       	ldd	r20, Y+1	; 0x01
 21c:	84 2f       	mov	r24, r20
 21e:	87 70       	andi	r24, 0x07	; 7
 220:	21 e0       	ldi	r18, 0x01	; 1
 222:	30 e0       	ldi	r19, 0x00	; 0
 224:	02 c0       	rjmp	.+4      	; 0x22a <_Z4loopv+0xa0>
 226:	22 0f       	add	r18, r18
 228:	33 1f       	adc	r19, r19
 22a:	8a 95       	dec	r24
 22c:	e2 f7       	brpl	.-8      	; 0x226 <_Z4loopv+0x9c>
		inline bool is_enabled(EPort port) {
			return tst_bit(fcrof(port), nmr(port));
		}
		
		inline bool read(EPort port) {
			return tst_bit(fcrin(port), nmr(port));
 22e:	48 30       	cpi	r20, 0x08	; 8
 230:	10 f4       	brcc	.+4      	; 0x236 <_Z4loopv+0xac>
 232:	89 b1       	in	r24, 0x09	; 9
 234:	01 c0       	rjmp	.+2      	; 0x238 <_Z4loopv+0xae>
 236:	83 b1       	in	r24, 0x03	; 3
 238:	90 e0       	ldi	r25, 0x00	; 0
 23a:	82 23       	and	r24, r18
 23c:	93 23       	and	r25, r19
 23e:	89 2b       	or	r24, r25
 240:	b1 f3       	breq	.-20     	; 0x22e <_Z4loopv+0xa4>
				TCNT1 = 0;
 242:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 246:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
				
				while (port::read(_echoPort));
 24a:	49 81       	ldd	r20, Y+1	; 0x01
 24c:	84 2f       	mov	r24, r20
 24e:	87 70       	andi	r24, 0x07	; 7
 250:	21 e0       	ldi	r18, 0x01	; 1
 252:	30 e0       	ldi	r19, 0x00	; 0
 254:	02 c0       	rjmp	.+4      	; 0x25a <_Z4loopv+0xd0>
 256:	22 0f       	add	r18, r18
 258:	33 1f       	adc	r19, r19
 25a:	8a 95       	dec	r24
 25c:	e2 f7       	brpl	.-8      	; 0x256 <_Z4loopv+0xcc>
 25e:	48 30       	cpi	r20, 0x08	; 8
 260:	10 f4       	brcc	.+4      	; 0x266 <_Z4loopv+0xdc>
 262:	89 b1       	in	r24, 0x09	; 9
 264:	01 c0       	rjmp	.+2      	; 0x268 <_Z4loopv+0xde>
 266:	83 b1       	in	r24, 0x03	; 3
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	82 23       	and	r24, r18
 26c:	93 23       	and	r25, r19
 26e:	89 2b       	or	r24, r25
 270:	b1 f7       	brne	.-20     	; 0x25e <_Z4loopv+0xd4>
				count = TCNT1;
 272:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 276:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 27a:	3b 83       	std	Y+3, r19	; 0x03
 27c:	2a 83       	std	Y+2, r18	; 0x02
				
				uint16 ret = (uint16)(count / 116);
 27e:	af e9       	ldi	r26, 0x9F	; 159
 280:	b6 e4       	ldi	r27, 0x46	; 70
 282:	0e 94 1c 02 	call	0x438	; 0x438 <__umulhisi3>
 286:	ec 01       	movw	r28, r24
 288:	d6 95       	lsr	r29
 28a:	c7 95       	ror	r28
 28c:	d2 95       	swap	r29
 28e:	c2 95       	swap	r28
 290:	cf 70       	andi	r28, 0x0F	; 15
 292:	cd 27       	eor	r28, r29
 294:	df 70       	andi	r29, 0x0F	; 15
 296:	cd 27       	eor	r28, r29
				printf("\ndistancia: %d\n", ret);
 298:	df 93       	push	r29
 29a:	cf 93       	push	r28
 29c:	86 e0       	ldi	r24, 0x06	; 6
 29e:	91 e0       	ldi	r25, 0x01	; 1
 2a0:	9f 93       	push	r25
 2a2:	8f 93       	push	r24
 2a4:	0e 94 4c 03 	call	0x698	; 0x698 <printf>
				util::delay_ms(60);
 2a8:	8c e3       	ldi	r24, 0x3C	; 60
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	0e 94 6e 00 	call	0xdc	; 0xdc <_ZN7zeduino4util8delay_msEj>
	led->Blink(distance * 10);
 2b0:	ce 01       	movw	r24, r28
 2b2:	88 0f       	add	r24, r24
 2b4:	99 1f       	adc	r25, r25
 2b6:	cc 0f       	add	r28, r28
 2b8:	dd 1f       	adc	r29, r29
 2ba:	cc 0f       	add	r28, r28
 2bc:	dd 1f       	adc	r29, r29
 2be:	cc 0f       	add	r28, r28
 2c0:	dd 1f       	adc	r29, r29
 2c2:	8c 0f       	add	r24, r28
 2c4:	9d 1f       	adc	r25, r29
 2c6:	c0 91 16 01 	lds	r28, 0x0116	; 0x800116 <__data_end>
 2ca:	d0 91 17 01 	lds	r29, 0x0117	; 0x800117 <__data_end+0x1>
			public: Led(EPort port) : _port(port) {}
			
			public: inline bool IsOn() { return is_enabled(_port); }
			public: inline void TurnOn() { enable(_port); }
			public: inline void TurnOff() { disable(_port);	}
			public: inline void Toggle() { if (is_enabled(_port)) disable(_port); else enable(_port); }
 2ce:	28 81       	ld	r18, Y
		inline void disable(EPort port) {
			clr_bit(fcrof(port), nmr(port));
		}
		
		inline bool is_enabled(EPort port) {
			return tst_bit(fcrof(port), nmr(port));
 2d0:	0f 90       	pop	r0
 2d2:	0f 90       	pop	r0
 2d4:	0f 90       	pop	r0
 2d6:	0f 90       	pop	r0
 2d8:	28 30       	cpi	r18, 0x08	; 8
 2da:	60 f4       	brcc	.+24     	; 0x2f4 <_Z4loopv+0x16a>
 2dc:	4b b1       	in	r20, 0x0b	; 11
 2de:	27 70       	andi	r18, 0x07	; 7
 2e0:	50 e0       	ldi	r21, 0x00	; 0
 2e2:	02 2e       	mov	r0, r18
 2e4:	02 c0       	rjmp	.+4      	; 0x2ea <_Z4loopv+0x160>
 2e6:	55 95       	asr	r21
 2e8:	47 95       	ror	r20
 2ea:	0a 94       	dec	r0
 2ec:	e2 f7       	brpl	.-8      	; 0x2e6 <_Z4loopv+0x15c>
 2ee:	40 fd       	sbrc	r20, 0
 2f0:	0d c0       	rjmp	.+26     	; 0x30c <_Z4loopv+0x182>
 2f2:	60 c0       	rjmp	.+192    	; 0x3b4 <_Z4loopv+0x22a>
 2f4:	45 b1       	in	r20, 0x05	; 5
 2f6:	27 70       	andi	r18, 0x07	; 7
 2f8:	50 e0       	ldi	r21, 0x00	; 0
 2fa:	02 2e       	mov	r0, r18
 2fc:	02 c0       	rjmp	.+4      	; 0x302 <_Z4loopv+0x178>
 2fe:	55 95       	asr	r21
 300:	47 95       	ror	r20
 302:	0a 94       	dec	r0
 304:	e2 f7       	brpl	.-8      	; 0x2fe <_Z4loopv+0x174>
 306:	40 fd       	sbrc	r20, 0
 308:	0f c0       	rjmp	.+30     	; 0x328 <_Z4loopv+0x19e>
 30a:	61 c0       	rjmp	.+194    	; 0x3ce <_Z4loopv+0x244>
			if (b) set_bit(fcrof(port), nmr(port));
			else clr_bit(fcrof(port), nmr(port));
		}
		
		inline void disable(EPort port) {
			clr_bit(fcrof(port), nmr(port));
 30c:	6b b1       	in	r22, 0x0b	; 11
 30e:	41 e0       	ldi	r20, 0x01	; 1
 310:	50 e0       	ldi	r21, 0x00	; 0
 312:	fa 01       	movw	r30, r20
 314:	02 c0       	rjmp	.+4      	; 0x31a <_Z4loopv+0x190>
 316:	ee 0f       	add	r30, r30
 318:	ff 1f       	adc	r31, r31
 31a:	2a 95       	dec	r18
 31c:	e2 f7       	brpl	.-8      	; 0x316 <_Z4loopv+0x18c>
 31e:	9f 01       	movw	r18, r30
 320:	20 95       	com	r18
 322:	26 23       	and	r18, r22
 324:	2b b9       	out	0x0b, r18	; 11
 326:	0d c0       	rjmp	.+26     	; 0x342 <_Z4loopv+0x1b8>
 328:	65 b1       	in	r22, 0x05	; 5
 32a:	41 e0       	ldi	r20, 0x01	; 1
 32c:	50 e0       	ldi	r21, 0x00	; 0
 32e:	fa 01       	movw	r30, r20
 330:	02 c0       	rjmp	.+4      	; 0x336 <_Z4loopv+0x1ac>
 332:	ee 0f       	add	r30, r30
 334:	ff 1f       	adc	r31, r31
 336:	2a 95       	dec	r18
 338:	e2 f7       	brpl	.-8      	; 0x332 <_Z4loopv+0x1a8>
 33a:	9f 01       	movw	r18, r30
 33c:	20 95       	com	r18
 33e:	26 23       	and	r18, r22
 340:	25 b9       	out	0x05, r18	; 5
			
			public: inline void Blink(const uint16_t time) {
				Toggle();
				util::delay_ms(time);
 342:	0e 94 6e 00 	call	0xdc	; 0xdc <_ZN7zeduino4util8delay_msEj>
			public: Led(EPort port) : _port(port) {}
			
			public: inline bool IsOn() { return is_enabled(_port); }
			public: inline void TurnOn() { enable(_port); }
			public: inline void TurnOff() { disable(_port);	}
			public: inline void Toggle() { if (is_enabled(_port)) disable(_port); else enable(_port); }
 346:	88 81       	ld	r24, Y
		}
		
		inline bool is_enabled(EPort port) {
			return tst_bit(fcrof(port), nmr(port));
 348:	88 30       	cpi	r24, 0x08	; 8
 34a:	60 f4       	brcc	.+24     	; 0x364 <_Z4loopv+0x1da>
 34c:	2b b1       	in	r18, 0x0b	; 11
 34e:	87 70       	andi	r24, 0x07	; 7
 350:	30 e0       	ldi	r19, 0x00	; 0
 352:	08 2e       	mov	r0, r24
 354:	02 c0       	rjmp	.+4      	; 0x35a <_Z4loopv+0x1d0>
 356:	35 95       	asr	r19
 358:	27 95       	ror	r18
 35a:	0a 94       	dec	r0
 35c:	e2 f7       	brpl	.-8      	; 0x356 <_Z4loopv+0x1cc>
 35e:	20 fd       	sbrc	r18, 0
 360:	0d c0       	rjmp	.+26     	; 0x37c <_Z4loopv+0x1f2>
 362:	42 c0       	rjmp	.+132    	; 0x3e8 <_Z4loopv+0x25e>
 364:	25 b1       	in	r18, 0x05	; 5
 366:	87 70       	andi	r24, 0x07	; 7
 368:	30 e0       	ldi	r19, 0x00	; 0
 36a:	08 2e       	mov	r0, r24
 36c:	02 c0       	rjmp	.+4      	; 0x372 <_Z4loopv+0x1e8>
 36e:	35 95       	asr	r19
 370:	27 95       	ror	r18
 372:	0a 94       	dec	r0
 374:	e2 f7       	brpl	.-8      	; 0x36e <_Z4loopv+0x1e4>
 376:	20 fd       	sbrc	r18, 0
 378:	0f c0       	rjmp	.+30     	; 0x398 <_Z4loopv+0x20e>
 37a:	43 c0       	rjmp	.+134    	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
			if (b) set_bit(fcrof(port), nmr(port));
			else clr_bit(fcrof(port), nmr(port));
		}
		
		inline void disable(EPort port) {
			clr_bit(fcrof(port), nmr(port));
 37c:	4b b1       	in	r20, 0x0b	; 11
 37e:	21 e0       	ldi	r18, 0x01	; 1
 380:	30 e0       	ldi	r19, 0x00	; 0
 382:	b9 01       	movw	r22, r18
 384:	02 c0       	rjmp	.+4      	; 0x38a <_Z4loopv+0x200>
 386:	66 0f       	add	r22, r22
 388:	77 1f       	adc	r23, r23
 38a:	8a 95       	dec	r24
 38c:	e2 f7       	brpl	.-8      	; 0x386 <_Z4loopv+0x1fc>
 38e:	cb 01       	movw	r24, r22
 390:	80 95       	com	r24
 392:	84 23       	and	r24, r20
 394:	8b b9       	out	0x0b, r24	; 11
 396:	41 c0       	rjmp	.+130    	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 398:	45 b1       	in	r20, 0x05	; 5
 39a:	21 e0       	ldi	r18, 0x01	; 1
 39c:	30 e0       	ldi	r19, 0x00	; 0
 39e:	f9 01       	movw	r30, r18
 3a0:	02 c0       	rjmp	.+4      	; 0x3a6 <_Z4loopv+0x21c>
 3a2:	ee 0f       	add	r30, r30
 3a4:	ff 1f       	adc	r31, r31
 3a6:	8a 95       	dec	r24
 3a8:	e2 f7       	brpl	.-8      	; 0x3a2 <_Z4loopv+0x218>
 3aa:	cf 01       	movw	r24, r30
 3ac:	80 95       	com	r24
 3ae:	84 23       	and	r24, r20
 3b0:	85 b9       	out	0x05, r24	; 5
	
}
 3b2:	33 c0       	rjmp	.+102    	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
		inline EMode get_mode(EPort port) {
			return (EMode)tst_bit(fcrio(port), nmr(port));
		}
		
		inline void enable(EPort port) {
			set_bit(fcrof(port), nmr(port));
 3b4:	6b b1       	in	r22, 0x0b	; 11
 3b6:	41 e0       	ldi	r20, 0x01	; 1
 3b8:	50 e0       	ldi	r21, 0x00	; 0
 3ba:	fa 01       	movw	r30, r20
 3bc:	02 c0       	rjmp	.+4      	; 0x3c2 <_Z4loopv+0x238>
 3be:	ee 0f       	add	r30, r30
 3c0:	ff 1f       	adc	r31, r31
 3c2:	2a 95       	dec	r18
 3c4:	e2 f7       	brpl	.-8      	; 0x3be <_Z4loopv+0x234>
 3c6:	9f 01       	movw	r18, r30
 3c8:	26 2b       	or	r18, r22
 3ca:	2b b9       	out	0x0b, r18	; 11
 3cc:	ba cf       	rjmp	.-140    	; 0x342 <_Z4loopv+0x1b8>
 3ce:	65 b1       	in	r22, 0x05	; 5
 3d0:	41 e0       	ldi	r20, 0x01	; 1
 3d2:	50 e0       	ldi	r21, 0x00	; 0
 3d4:	fa 01       	movw	r30, r20
 3d6:	02 c0       	rjmp	.+4      	; 0x3dc <_Z4loopv+0x252>
 3d8:	ee 0f       	add	r30, r30
 3da:	ff 1f       	adc	r31, r31
 3dc:	2a 95       	dec	r18
 3de:	e2 f7       	brpl	.-8      	; 0x3d8 <_Z4loopv+0x24e>
 3e0:	9f 01       	movw	r18, r30
 3e2:	26 2b       	or	r18, r22
 3e4:	25 b9       	out	0x05, r18	; 5
 3e6:	ad cf       	rjmp	.-166    	; 0x342 <_Z4loopv+0x1b8>
 3e8:	4b b1       	in	r20, 0x0b	; 11
 3ea:	21 e0       	ldi	r18, 0x01	; 1
 3ec:	30 e0       	ldi	r19, 0x00	; 0
 3ee:	b9 01       	movw	r22, r18
 3f0:	02 c0       	rjmp	.+4      	; 0x3f6 <_Z4loopv+0x26c>
 3f2:	66 0f       	add	r22, r22
 3f4:	77 1f       	adc	r23, r23
 3f6:	8a 95       	dec	r24
 3f8:	e2 f7       	brpl	.-8      	; 0x3f2 <_Z4loopv+0x268>
 3fa:	cb 01       	movw	r24, r22
 3fc:	84 2b       	or	r24, r20
 3fe:	8b b9       	out	0x0b, r24	; 11
 400:	0c c0       	rjmp	.+24     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 402:	45 b1       	in	r20, 0x05	; 5
 404:	21 e0       	ldi	r18, 0x01	; 1
 406:	30 e0       	ldi	r19, 0x00	; 0
 408:	f9 01       	movw	r30, r18
 40a:	02 c0       	rjmp	.+4      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 40c:	ee 0f       	add	r30, r30
 40e:	ff 1f       	adc	r31, r31
 410:	8a 95       	dec	r24
 412:	e2 f7       	brpl	.-8      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 414:	cf 01       	movw	r24, r30
 416:	84 2b       	or	r24, r20
 418:	85 b9       	out	0x05, r24	; 5
 41a:	df 91       	pop	r29
 41c:	cf 91       	pop	r28
 41e:	08 95       	ret

00000420 <main>:
void setup();
void loop();

extern "C" {
	int main() {
		uart_init();
 420:	0e 94 82 00 	call	0x104	; 0x104 <_Z9uart_initv>
		enum EPrescaler {
			PS0 = CS00, PS1 = CS01, PS2 = CS02
		};
		
		inline void prescaler(EPrescaler p) {
			set_bit(TCCR1B, p);
 424:	e1 e8       	ldi	r30, 0x81	; 129
 426:	f0 e0       	ldi	r31, 0x00	; 0
 428:	80 81       	ld	r24, Z
 42a:	82 60       	ori	r24, 0x02	; 2
 42c:	80 83       	st	Z, r24
		zeduino::clock::prescaler(zeduino::clock::PS1);
		setup();
 42e:	0e 94 a9 00 	call	0x152	; 0x152 <_Z5setupv>
		while (true) loop();
 432:	0e 94 c5 00 	call	0x18a	; 0x18a <_Z4loopv>
 436:	fd cf       	rjmp	.-6      	; 0x432 <main+0x12>

00000438 <__umulhisi3>:
 438:	a2 9f       	mul	r26, r18
 43a:	b0 01       	movw	r22, r0
 43c:	b3 9f       	mul	r27, r19
 43e:	c0 01       	movw	r24, r0
 440:	a3 9f       	mul	r26, r19
 442:	70 0d       	add	r23, r0
 444:	81 1d       	adc	r24, r1
 446:	11 24       	eor	r1, r1
 448:	91 1d       	adc	r25, r1
 44a:	b2 9f       	mul	r27, r18
 44c:	70 0d       	add	r23, r0
 44e:	81 1d       	adc	r24, r1
 450:	11 24       	eor	r1, r1
 452:	91 1d       	adc	r25, r1
 454:	08 95       	ret

00000456 <malloc>:
 456:	0f 93       	push	r16
 458:	1f 93       	push	r17
 45a:	cf 93       	push	r28
 45c:	df 93       	push	r29
 45e:	82 30       	cpi	r24, 0x02	; 2
 460:	91 05       	cpc	r25, r1
 462:	10 f4       	brcc	.+4      	; 0x468 <malloc+0x12>
 464:	82 e0       	ldi	r24, 0x02	; 2
 466:	90 e0       	ldi	r25, 0x00	; 0
 468:	e0 91 2a 01 	lds	r30, 0x012A	; 0x80012a <__flp>
 46c:	f0 91 2b 01 	lds	r31, 0x012B	; 0x80012b <__flp+0x1>
 470:	20 e0       	ldi	r18, 0x00	; 0
 472:	30 e0       	ldi	r19, 0x00	; 0
 474:	a0 e0       	ldi	r26, 0x00	; 0
 476:	b0 e0       	ldi	r27, 0x00	; 0
 478:	30 97       	sbiw	r30, 0x00	; 0
 47a:	19 f1       	breq	.+70     	; 0x4c2 <malloc+0x6c>
 47c:	40 81       	ld	r20, Z
 47e:	51 81       	ldd	r21, Z+1	; 0x01
 480:	02 81       	ldd	r16, Z+2	; 0x02
 482:	13 81       	ldd	r17, Z+3	; 0x03
 484:	48 17       	cp	r20, r24
 486:	59 07       	cpc	r21, r25
 488:	c8 f0       	brcs	.+50     	; 0x4bc <malloc+0x66>
 48a:	84 17       	cp	r24, r20
 48c:	95 07       	cpc	r25, r21
 48e:	69 f4       	brne	.+26     	; 0x4aa <malloc+0x54>
 490:	10 97       	sbiw	r26, 0x00	; 0
 492:	31 f0       	breq	.+12     	; 0x4a0 <malloc+0x4a>
 494:	12 96       	adiw	r26, 0x02	; 2
 496:	0c 93       	st	X, r16
 498:	12 97       	sbiw	r26, 0x02	; 2
 49a:	13 96       	adiw	r26, 0x03	; 3
 49c:	1c 93       	st	X, r17
 49e:	27 c0       	rjmp	.+78     	; 0x4ee <malloc+0x98>
 4a0:	00 93 2a 01 	sts	0x012A, r16	; 0x80012a <__flp>
 4a4:	10 93 2b 01 	sts	0x012B, r17	; 0x80012b <__flp+0x1>
 4a8:	22 c0       	rjmp	.+68     	; 0x4ee <malloc+0x98>
 4aa:	21 15       	cp	r18, r1
 4ac:	31 05       	cpc	r19, r1
 4ae:	19 f0       	breq	.+6      	; 0x4b6 <malloc+0x60>
 4b0:	42 17       	cp	r20, r18
 4b2:	53 07       	cpc	r21, r19
 4b4:	18 f4       	brcc	.+6      	; 0x4bc <malloc+0x66>
 4b6:	9a 01       	movw	r18, r20
 4b8:	bd 01       	movw	r22, r26
 4ba:	ef 01       	movw	r28, r30
 4bc:	df 01       	movw	r26, r30
 4be:	f8 01       	movw	r30, r16
 4c0:	db cf       	rjmp	.-74     	; 0x478 <malloc+0x22>
 4c2:	21 15       	cp	r18, r1
 4c4:	31 05       	cpc	r19, r1
 4c6:	f9 f0       	breq	.+62     	; 0x506 <malloc+0xb0>
 4c8:	28 1b       	sub	r18, r24
 4ca:	39 0b       	sbc	r19, r25
 4cc:	24 30       	cpi	r18, 0x04	; 4
 4ce:	31 05       	cpc	r19, r1
 4d0:	80 f4       	brcc	.+32     	; 0x4f2 <malloc+0x9c>
 4d2:	8a 81       	ldd	r24, Y+2	; 0x02
 4d4:	9b 81       	ldd	r25, Y+3	; 0x03
 4d6:	61 15       	cp	r22, r1
 4d8:	71 05       	cpc	r23, r1
 4da:	21 f0       	breq	.+8      	; 0x4e4 <malloc+0x8e>
 4dc:	fb 01       	movw	r30, r22
 4de:	93 83       	std	Z+3, r25	; 0x03
 4e0:	82 83       	std	Z+2, r24	; 0x02
 4e2:	04 c0       	rjmp	.+8      	; 0x4ec <malloc+0x96>
 4e4:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <__flp+0x1>
 4e8:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <__flp>
 4ec:	fe 01       	movw	r30, r28
 4ee:	32 96       	adiw	r30, 0x02	; 2
 4f0:	44 c0       	rjmp	.+136    	; 0x57a <malloc+0x124>
 4f2:	fe 01       	movw	r30, r28
 4f4:	e2 0f       	add	r30, r18
 4f6:	f3 1f       	adc	r31, r19
 4f8:	81 93       	st	Z+, r24
 4fa:	91 93       	st	Z+, r25
 4fc:	22 50       	subi	r18, 0x02	; 2
 4fe:	31 09       	sbc	r19, r1
 500:	39 83       	std	Y+1, r19	; 0x01
 502:	28 83       	st	Y, r18
 504:	3a c0       	rjmp	.+116    	; 0x57a <malloc+0x124>
 506:	20 91 28 01 	lds	r18, 0x0128	; 0x800128 <__brkval>
 50a:	30 91 29 01 	lds	r19, 0x0129	; 0x800129 <__brkval+0x1>
 50e:	23 2b       	or	r18, r19
 510:	41 f4       	brne	.+16     	; 0x522 <malloc+0xcc>
 512:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 516:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 51a:	30 93 29 01 	sts	0x0129, r19	; 0x800129 <__brkval+0x1>
 51e:	20 93 28 01 	sts	0x0128, r18	; 0x800128 <__brkval>
 522:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 526:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 52a:	21 15       	cp	r18, r1
 52c:	31 05       	cpc	r19, r1
 52e:	41 f4       	brne	.+16     	; 0x540 <malloc+0xea>
 530:	2d b7       	in	r18, 0x3d	; 61
 532:	3e b7       	in	r19, 0x3e	; 62
 534:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 538:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 53c:	24 1b       	sub	r18, r20
 53e:	35 0b       	sbc	r19, r21
 540:	e0 91 28 01 	lds	r30, 0x0128	; 0x800128 <__brkval>
 544:	f0 91 29 01 	lds	r31, 0x0129	; 0x800129 <__brkval+0x1>
 548:	e2 17       	cp	r30, r18
 54a:	f3 07       	cpc	r31, r19
 54c:	a0 f4       	brcc	.+40     	; 0x576 <malloc+0x120>
 54e:	2e 1b       	sub	r18, r30
 550:	3f 0b       	sbc	r19, r31
 552:	28 17       	cp	r18, r24
 554:	39 07       	cpc	r19, r25
 556:	78 f0       	brcs	.+30     	; 0x576 <malloc+0x120>
 558:	ac 01       	movw	r20, r24
 55a:	4e 5f       	subi	r20, 0xFE	; 254
 55c:	5f 4f       	sbci	r21, 0xFF	; 255
 55e:	24 17       	cp	r18, r20
 560:	35 07       	cpc	r19, r21
 562:	48 f0       	brcs	.+18     	; 0x576 <malloc+0x120>
 564:	4e 0f       	add	r20, r30
 566:	5f 1f       	adc	r21, r31
 568:	50 93 29 01 	sts	0x0129, r21	; 0x800129 <__brkval+0x1>
 56c:	40 93 28 01 	sts	0x0128, r20	; 0x800128 <__brkval>
 570:	81 93       	st	Z+, r24
 572:	91 93       	st	Z+, r25
 574:	02 c0       	rjmp	.+4      	; 0x57a <malloc+0x124>
 576:	e0 e0       	ldi	r30, 0x00	; 0
 578:	f0 e0       	ldi	r31, 0x00	; 0
 57a:	cf 01       	movw	r24, r30
 57c:	df 91       	pop	r29
 57e:	cf 91       	pop	r28
 580:	1f 91       	pop	r17
 582:	0f 91       	pop	r16
 584:	08 95       	ret

00000586 <free>:
 586:	cf 93       	push	r28
 588:	df 93       	push	r29
 58a:	00 97       	sbiw	r24, 0x00	; 0
 58c:	09 f4       	brne	.+2      	; 0x590 <free+0xa>
 58e:	81 c0       	rjmp	.+258    	; 0x692 <free+0x10c>
 590:	fc 01       	movw	r30, r24
 592:	32 97       	sbiw	r30, 0x02	; 2
 594:	13 82       	std	Z+3, r1	; 0x03
 596:	12 82       	std	Z+2, r1	; 0x02
 598:	a0 91 2a 01 	lds	r26, 0x012A	; 0x80012a <__flp>
 59c:	b0 91 2b 01 	lds	r27, 0x012B	; 0x80012b <__flp+0x1>
 5a0:	10 97       	sbiw	r26, 0x00	; 0
 5a2:	81 f4       	brne	.+32     	; 0x5c4 <free+0x3e>
 5a4:	20 81       	ld	r18, Z
 5a6:	31 81       	ldd	r19, Z+1	; 0x01
 5a8:	82 0f       	add	r24, r18
 5aa:	93 1f       	adc	r25, r19
 5ac:	20 91 28 01 	lds	r18, 0x0128	; 0x800128 <__brkval>
 5b0:	30 91 29 01 	lds	r19, 0x0129	; 0x800129 <__brkval+0x1>
 5b4:	28 17       	cp	r18, r24
 5b6:	39 07       	cpc	r19, r25
 5b8:	51 f5       	brne	.+84     	; 0x60e <free+0x88>
 5ba:	f0 93 29 01 	sts	0x0129, r31	; 0x800129 <__brkval+0x1>
 5be:	e0 93 28 01 	sts	0x0128, r30	; 0x800128 <__brkval>
 5c2:	67 c0       	rjmp	.+206    	; 0x692 <free+0x10c>
 5c4:	ed 01       	movw	r28, r26
 5c6:	20 e0       	ldi	r18, 0x00	; 0
 5c8:	30 e0       	ldi	r19, 0x00	; 0
 5ca:	ce 17       	cp	r28, r30
 5cc:	df 07       	cpc	r29, r31
 5ce:	40 f4       	brcc	.+16     	; 0x5e0 <free+0x5a>
 5d0:	4a 81       	ldd	r20, Y+2	; 0x02
 5d2:	5b 81       	ldd	r21, Y+3	; 0x03
 5d4:	9e 01       	movw	r18, r28
 5d6:	41 15       	cp	r20, r1
 5d8:	51 05       	cpc	r21, r1
 5da:	f1 f0       	breq	.+60     	; 0x618 <free+0x92>
 5dc:	ea 01       	movw	r28, r20
 5de:	f5 cf       	rjmp	.-22     	; 0x5ca <free+0x44>
 5e0:	d3 83       	std	Z+3, r29	; 0x03
 5e2:	c2 83       	std	Z+2, r28	; 0x02
 5e4:	40 81       	ld	r20, Z
 5e6:	51 81       	ldd	r21, Z+1	; 0x01
 5e8:	84 0f       	add	r24, r20
 5ea:	95 1f       	adc	r25, r21
 5ec:	c8 17       	cp	r28, r24
 5ee:	d9 07       	cpc	r29, r25
 5f0:	59 f4       	brne	.+22     	; 0x608 <free+0x82>
 5f2:	88 81       	ld	r24, Y
 5f4:	99 81       	ldd	r25, Y+1	; 0x01
 5f6:	84 0f       	add	r24, r20
 5f8:	95 1f       	adc	r25, r21
 5fa:	02 96       	adiw	r24, 0x02	; 2
 5fc:	91 83       	std	Z+1, r25	; 0x01
 5fe:	80 83       	st	Z, r24
 600:	8a 81       	ldd	r24, Y+2	; 0x02
 602:	9b 81       	ldd	r25, Y+3	; 0x03
 604:	93 83       	std	Z+3, r25	; 0x03
 606:	82 83       	std	Z+2, r24	; 0x02
 608:	21 15       	cp	r18, r1
 60a:	31 05       	cpc	r19, r1
 60c:	29 f4       	brne	.+10     	; 0x618 <free+0x92>
 60e:	f0 93 2b 01 	sts	0x012B, r31	; 0x80012b <__flp+0x1>
 612:	e0 93 2a 01 	sts	0x012A, r30	; 0x80012a <__flp>
 616:	3d c0       	rjmp	.+122    	; 0x692 <free+0x10c>
 618:	e9 01       	movw	r28, r18
 61a:	fb 83       	std	Y+3, r31	; 0x03
 61c:	ea 83       	std	Y+2, r30	; 0x02
 61e:	49 91       	ld	r20, Y+
 620:	59 91       	ld	r21, Y+
 622:	c4 0f       	add	r28, r20
 624:	d5 1f       	adc	r29, r21
 626:	ec 17       	cp	r30, r28
 628:	fd 07       	cpc	r31, r29
 62a:	61 f4       	brne	.+24     	; 0x644 <free+0xbe>
 62c:	80 81       	ld	r24, Z
 62e:	91 81       	ldd	r25, Z+1	; 0x01
 630:	84 0f       	add	r24, r20
 632:	95 1f       	adc	r25, r21
 634:	02 96       	adiw	r24, 0x02	; 2
 636:	e9 01       	movw	r28, r18
 638:	99 83       	std	Y+1, r25	; 0x01
 63a:	88 83       	st	Y, r24
 63c:	82 81       	ldd	r24, Z+2	; 0x02
 63e:	93 81       	ldd	r25, Z+3	; 0x03
 640:	9b 83       	std	Y+3, r25	; 0x03
 642:	8a 83       	std	Y+2, r24	; 0x02
 644:	e0 e0       	ldi	r30, 0x00	; 0
 646:	f0 e0       	ldi	r31, 0x00	; 0
 648:	12 96       	adiw	r26, 0x02	; 2
 64a:	8d 91       	ld	r24, X+
 64c:	9c 91       	ld	r25, X
 64e:	13 97       	sbiw	r26, 0x03	; 3
 650:	00 97       	sbiw	r24, 0x00	; 0
 652:	19 f0       	breq	.+6      	; 0x65a <free+0xd4>
 654:	fd 01       	movw	r30, r26
 656:	dc 01       	movw	r26, r24
 658:	f7 cf       	rjmp	.-18     	; 0x648 <free+0xc2>
 65a:	8d 91       	ld	r24, X+
 65c:	9c 91       	ld	r25, X
 65e:	11 97       	sbiw	r26, 0x01	; 1
 660:	9d 01       	movw	r18, r26
 662:	2e 5f       	subi	r18, 0xFE	; 254
 664:	3f 4f       	sbci	r19, 0xFF	; 255
 666:	82 0f       	add	r24, r18
 668:	93 1f       	adc	r25, r19
 66a:	20 91 28 01 	lds	r18, 0x0128	; 0x800128 <__brkval>
 66e:	30 91 29 01 	lds	r19, 0x0129	; 0x800129 <__brkval+0x1>
 672:	28 17       	cp	r18, r24
 674:	39 07       	cpc	r19, r25
 676:	69 f4       	brne	.+26     	; 0x692 <free+0x10c>
 678:	30 97       	sbiw	r30, 0x00	; 0
 67a:	29 f4       	brne	.+10     	; 0x686 <free+0x100>
 67c:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <__flp+0x1>
 680:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <__flp>
 684:	02 c0       	rjmp	.+4      	; 0x68a <free+0x104>
 686:	13 82       	std	Z+3, r1	; 0x03
 688:	12 82       	std	Z+2, r1	; 0x02
 68a:	b0 93 29 01 	sts	0x0129, r27	; 0x800129 <__brkval+0x1>
 68e:	a0 93 28 01 	sts	0x0128, r26	; 0x800128 <__brkval>
 692:	df 91       	pop	r29
 694:	cf 91       	pop	r28
 696:	08 95       	ret

00000698 <printf>:
 698:	a0 e0       	ldi	r26, 0x00	; 0
 69a:	b0 e0       	ldi	r27, 0x00	; 0
 69c:	e2 e5       	ldi	r30, 0x52	; 82
 69e:	f3 e0       	ldi	r31, 0x03	; 3
 6a0:	0c 94 03 06 	jmp	0xc06	; 0xc06 <__prologue_saves__+0x20>
 6a4:	ae 01       	movw	r20, r28
 6a6:	4b 5f       	subi	r20, 0xFB	; 251
 6a8:	5f 4f       	sbci	r21, 0xFF	; 255
 6aa:	fa 01       	movw	r30, r20
 6ac:	61 91       	ld	r22, Z+
 6ae:	71 91       	ld	r23, Z+
 6b0:	af 01       	movw	r20, r30
 6b2:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <__iob+0x2>
 6b6:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <__iob+0x3>
 6ba:	0e 94 62 03 	call	0x6c4	; 0x6c4 <vfprintf>
 6be:	e2 e0       	ldi	r30, 0x02	; 2
 6c0:	0c 94 1f 06 	jmp	0xc3e	; 0xc3e <__epilogue_restores__+0x20>

000006c4 <vfprintf>:
 6c4:	ab e0       	ldi	r26, 0x0B	; 11
 6c6:	b0 e0       	ldi	r27, 0x00	; 0
 6c8:	e8 e6       	ldi	r30, 0x68	; 104
 6ca:	f3 e0       	ldi	r31, 0x03	; 3
 6cc:	0c 94 f3 05 	jmp	0xbe6	; 0xbe6 <__prologue_saves__>
 6d0:	6c 01       	movw	r12, r24
 6d2:	7b 01       	movw	r14, r22
 6d4:	8a 01       	movw	r16, r20
 6d6:	fc 01       	movw	r30, r24
 6d8:	17 82       	std	Z+7, r1	; 0x07
 6da:	16 82       	std	Z+6, r1	; 0x06
 6dc:	83 81       	ldd	r24, Z+3	; 0x03
 6de:	81 ff       	sbrs	r24, 1
 6e0:	cc c1       	rjmp	.+920    	; 0xa7a <__stack+0x17b>
 6e2:	ce 01       	movw	r24, r28
 6e4:	01 96       	adiw	r24, 0x01	; 1
 6e6:	3c 01       	movw	r6, r24
 6e8:	f6 01       	movw	r30, r12
 6ea:	93 81       	ldd	r25, Z+3	; 0x03
 6ec:	f7 01       	movw	r30, r14
 6ee:	93 fd       	sbrc	r25, 3
 6f0:	85 91       	lpm	r24, Z+
 6f2:	93 ff       	sbrs	r25, 3
 6f4:	81 91       	ld	r24, Z+
 6f6:	7f 01       	movw	r14, r30
 6f8:	88 23       	and	r24, r24
 6fa:	09 f4       	brne	.+2      	; 0x6fe <vfprintf+0x3a>
 6fc:	ba c1       	rjmp	.+884    	; 0xa72 <__stack+0x173>
 6fe:	85 32       	cpi	r24, 0x25	; 37
 700:	39 f4       	brne	.+14     	; 0x710 <vfprintf+0x4c>
 702:	93 fd       	sbrc	r25, 3
 704:	85 91       	lpm	r24, Z+
 706:	93 ff       	sbrs	r25, 3
 708:	81 91       	ld	r24, Z+
 70a:	7f 01       	movw	r14, r30
 70c:	85 32       	cpi	r24, 0x25	; 37
 70e:	29 f4       	brne	.+10     	; 0x71a <vfprintf+0x56>
 710:	b6 01       	movw	r22, r12
 712:	90 e0       	ldi	r25, 0x00	; 0
 714:	0e 94 59 05 	call	0xab2	; 0xab2 <fputc>
 718:	e7 cf       	rjmp	.-50     	; 0x6e8 <vfprintf+0x24>
 71a:	91 2c       	mov	r9, r1
 71c:	21 2c       	mov	r2, r1
 71e:	31 2c       	mov	r3, r1
 720:	ff e1       	ldi	r31, 0x1F	; 31
 722:	f3 15       	cp	r31, r3
 724:	d8 f0       	brcs	.+54     	; 0x75c <vfprintf+0x98>
 726:	8b 32       	cpi	r24, 0x2B	; 43
 728:	79 f0       	breq	.+30     	; 0x748 <vfprintf+0x84>
 72a:	38 f4       	brcc	.+14     	; 0x73a <vfprintf+0x76>
 72c:	80 32       	cpi	r24, 0x20	; 32
 72e:	79 f0       	breq	.+30     	; 0x74e <vfprintf+0x8a>
 730:	83 32       	cpi	r24, 0x23	; 35
 732:	a1 f4       	brne	.+40     	; 0x75c <vfprintf+0x98>
 734:	23 2d       	mov	r18, r3
 736:	20 61       	ori	r18, 0x10	; 16
 738:	1d c0       	rjmp	.+58     	; 0x774 <vfprintf+0xb0>
 73a:	8d 32       	cpi	r24, 0x2D	; 45
 73c:	61 f0       	breq	.+24     	; 0x756 <vfprintf+0x92>
 73e:	80 33       	cpi	r24, 0x30	; 48
 740:	69 f4       	brne	.+26     	; 0x75c <vfprintf+0x98>
 742:	23 2d       	mov	r18, r3
 744:	21 60       	ori	r18, 0x01	; 1
 746:	16 c0       	rjmp	.+44     	; 0x774 <vfprintf+0xb0>
 748:	83 2d       	mov	r24, r3
 74a:	82 60       	ori	r24, 0x02	; 2
 74c:	38 2e       	mov	r3, r24
 74e:	e3 2d       	mov	r30, r3
 750:	e4 60       	ori	r30, 0x04	; 4
 752:	3e 2e       	mov	r3, r30
 754:	2a c0       	rjmp	.+84     	; 0x7aa <vfprintf+0xe6>
 756:	f3 2d       	mov	r31, r3
 758:	f8 60       	ori	r31, 0x08	; 8
 75a:	1d c0       	rjmp	.+58     	; 0x796 <vfprintf+0xd2>
 75c:	37 fc       	sbrc	r3, 7
 75e:	2d c0       	rjmp	.+90     	; 0x7ba <vfprintf+0xf6>
 760:	20 ed       	ldi	r18, 0xD0	; 208
 762:	28 0f       	add	r18, r24
 764:	2a 30       	cpi	r18, 0x0A	; 10
 766:	40 f0       	brcs	.+16     	; 0x778 <vfprintf+0xb4>
 768:	8e 32       	cpi	r24, 0x2E	; 46
 76a:	b9 f4       	brne	.+46     	; 0x79a <vfprintf+0xd6>
 76c:	36 fc       	sbrc	r3, 6
 76e:	81 c1       	rjmp	.+770    	; 0xa72 <__stack+0x173>
 770:	23 2d       	mov	r18, r3
 772:	20 64       	ori	r18, 0x40	; 64
 774:	32 2e       	mov	r3, r18
 776:	19 c0       	rjmp	.+50     	; 0x7aa <vfprintf+0xe6>
 778:	36 fe       	sbrs	r3, 6
 77a:	06 c0       	rjmp	.+12     	; 0x788 <vfprintf+0xc4>
 77c:	8a e0       	ldi	r24, 0x0A	; 10
 77e:	98 9e       	mul	r9, r24
 780:	20 0d       	add	r18, r0
 782:	11 24       	eor	r1, r1
 784:	92 2e       	mov	r9, r18
 786:	11 c0       	rjmp	.+34     	; 0x7aa <vfprintf+0xe6>
 788:	ea e0       	ldi	r30, 0x0A	; 10
 78a:	2e 9e       	mul	r2, r30
 78c:	20 0d       	add	r18, r0
 78e:	11 24       	eor	r1, r1
 790:	22 2e       	mov	r2, r18
 792:	f3 2d       	mov	r31, r3
 794:	f0 62       	ori	r31, 0x20	; 32
 796:	3f 2e       	mov	r3, r31
 798:	08 c0       	rjmp	.+16     	; 0x7aa <vfprintf+0xe6>
 79a:	8c 36       	cpi	r24, 0x6C	; 108
 79c:	21 f4       	brne	.+8      	; 0x7a6 <vfprintf+0xe2>
 79e:	83 2d       	mov	r24, r3
 7a0:	80 68       	ori	r24, 0x80	; 128
 7a2:	38 2e       	mov	r3, r24
 7a4:	02 c0       	rjmp	.+4      	; 0x7aa <vfprintf+0xe6>
 7a6:	88 36       	cpi	r24, 0x68	; 104
 7a8:	41 f4       	brne	.+16     	; 0x7ba <vfprintf+0xf6>
 7aa:	f7 01       	movw	r30, r14
 7ac:	93 fd       	sbrc	r25, 3
 7ae:	85 91       	lpm	r24, Z+
 7b0:	93 ff       	sbrs	r25, 3
 7b2:	81 91       	ld	r24, Z+
 7b4:	7f 01       	movw	r14, r30
 7b6:	81 11       	cpse	r24, r1
 7b8:	b3 cf       	rjmp	.-154    	; 0x720 <vfprintf+0x5c>
 7ba:	98 2f       	mov	r25, r24
 7bc:	9f 7d       	andi	r25, 0xDF	; 223
 7be:	95 54       	subi	r25, 0x45	; 69
 7c0:	93 30       	cpi	r25, 0x03	; 3
 7c2:	28 f4       	brcc	.+10     	; 0x7ce <vfprintf+0x10a>
 7c4:	0c 5f       	subi	r16, 0xFC	; 252
 7c6:	1f 4f       	sbci	r17, 0xFF	; 255
 7c8:	9f e3       	ldi	r25, 0x3F	; 63
 7ca:	99 83       	std	Y+1, r25	; 0x01
 7cc:	0d c0       	rjmp	.+26     	; 0x7e8 <vfprintf+0x124>
 7ce:	83 36       	cpi	r24, 0x63	; 99
 7d0:	31 f0       	breq	.+12     	; 0x7de <vfprintf+0x11a>
 7d2:	83 37       	cpi	r24, 0x73	; 115
 7d4:	71 f0       	breq	.+28     	; 0x7f2 <vfprintf+0x12e>
 7d6:	83 35       	cpi	r24, 0x53	; 83
 7d8:	09 f0       	breq	.+2      	; 0x7dc <vfprintf+0x118>
 7da:	59 c0       	rjmp	.+178    	; 0x88e <vfprintf+0x1ca>
 7dc:	21 c0       	rjmp	.+66     	; 0x820 <vfprintf+0x15c>
 7de:	f8 01       	movw	r30, r16
 7e0:	80 81       	ld	r24, Z
 7e2:	89 83       	std	Y+1, r24	; 0x01
 7e4:	0e 5f       	subi	r16, 0xFE	; 254
 7e6:	1f 4f       	sbci	r17, 0xFF	; 255
 7e8:	88 24       	eor	r8, r8
 7ea:	83 94       	inc	r8
 7ec:	91 2c       	mov	r9, r1
 7ee:	53 01       	movw	r10, r6
 7f0:	13 c0       	rjmp	.+38     	; 0x818 <vfprintf+0x154>
 7f2:	28 01       	movw	r4, r16
 7f4:	f2 e0       	ldi	r31, 0x02	; 2
 7f6:	4f 0e       	add	r4, r31
 7f8:	51 1c       	adc	r5, r1
 7fa:	f8 01       	movw	r30, r16
 7fc:	a0 80       	ld	r10, Z
 7fe:	b1 80       	ldd	r11, Z+1	; 0x01
 800:	36 fe       	sbrs	r3, 6
 802:	03 c0       	rjmp	.+6      	; 0x80a <vfprintf+0x146>
 804:	69 2d       	mov	r22, r9
 806:	70 e0       	ldi	r23, 0x00	; 0
 808:	02 c0       	rjmp	.+4      	; 0x80e <vfprintf+0x14a>
 80a:	6f ef       	ldi	r22, 0xFF	; 255
 80c:	7f ef       	ldi	r23, 0xFF	; 255
 80e:	c5 01       	movw	r24, r10
 810:	0e 94 4e 05 	call	0xa9c	; 0xa9c <strnlen>
 814:	4c 01       	movw	r8, r24
 816:	82 01       	movw	r16, r4
 818:	f3 2d       	mov	r31, r3
 81a:	ff 77       	andi	r31, 0x7F	; 127
 81c:	3f 2e       	mov	r3, r31
 81e:	16 c0       	rjmp	.+44     	; 0x84c <vfprintf+0x188>
 820:	28 01       	movw	r4, r16
 822:	22 e0       	ldi	r18, 0x02	; 2
 824:	42 0e       	add	r4, r18
 826:	51 1c       	adc	r5, r1
 828:	f8 01       	movw	r30, r16
 82a:	a0 80       	ld	r10, Z
 82c:	b1 80       	ldd	r11, Z+1	; 0x01
 82e:	36 fe       	sbrs	r3, 6
 830:	03 c0       	rjmp	.+6      	; 0x838 <vfprintf+0x174>
 832:	69 2d       	mov	r22, r9
 834:	70 e0       	ldi	r23, 0x00	; 0
 836:	02 c0       	rjmp	.+4      	; 0x83c <vfprintf+0x178>
 838:	6f ef       	ldi	r22, 0xFF	; 255
 83a:	7f ef       	ldi	r23, 0xFF	; 255
 83c:	c5 01       	movw	r24, r10
 83e:	0e 94 43 05 	call	0xa86	; 0xa86 <strnlen_P>
 842:	4c 01       	movw	r8, r24
 844:	f3 2d       	mov	r31, r3
 846:	f0 68       	ori	r31, 0x80	; 128
 848:	3f 2e       	mov	r3, r31
 84a:	82 01       	movw	r16, r4
 84c:	33 fc       	sbrc	r3, 3
 84e:	1b c0       	rjmp	.+54     	; 0x886 <vfprintf+0x1c2>
 850:	82 2d       	mov	r24, r2
 852:	90 e0       	ldi	r25, 0x00	; 0
 854:	88 16       	cp	r8, r24
 856:	99 06       	cpc	r9, r25
 858:	b0 f4       	brcc	.+44     	; 0x886 <vfprintf+0x1c2>
 85a:	b6 01       	movw	r22, r12
 85c:	80 e2       	ldi	r24, 0x20	; 32
 85e:	90 e0       	ldi	r25, 0x00	; 0
 860:	0e 94 59 05 	call	0xab2	; 0xab2 <fputc>
 864:	2a 94       	dec	r2
 866:	f4 cf       	rjmp	.-24     	; 0x850 <vfprintf+0x18c>
 868:	f5 01       	movw	r30, r10
 86a:	37 fc       	sbrc	r3, 7
 86c:	85 91       	lpm	r24, Z+
 86e:	37 fe       	sbrs	r3, 7
 870:	81 91       	ld	r24, Z+
 872:	5f 01       	movw	r10, r30
 874:	b6 01       	movw	r22, r12
 876:	90 e0       	ldi	r25, 0x00	; 0
 878:	0e 94 59 05 	call	0xab2	; 0xab2 <fputc>
 87c:	21 10       	cpse	r2, r1
 87e:	2a 94       	dec	r2
 880:	21 e0       	ldi	r18, 0x01	; 1
 882:	82 1a       	sub	r8, r18
 884:	91 08       	sbc	r9, r1
 886:	81 14       	cp	r8, r1
 888:	91 04       	cpc	r9, r1
 88a:	71 f7       	brne	.-36     	; 0x868 <vfprintf+0x1a4>
 88c:	e8 c0       	rjmp	.+464    	; 0xa5e <__stack+0x15f>
 88e:	84 36       	cpi	r24, 0x64	; 100
 890:	11 f0       	breq	.+4      	; 0x896 <vfprintf+0x1d2>
 892:	89 36       	cpi	r24, 0x69	; 105
 894:	41 f5       	brne	.+80     	; 0x8e6 <vfprintf+0x222>
 896:	f8 01       	movw	r30, r16
 898:	37 fe       	sbrs	r3, 7
 89a:	07 c0       	rjmp	.+14     	; 0x8aa <vfprintf+0x1e6>
 89c:	60 81       	ld	r22, Z
 89e:	71 81       	ldd	r23, Z+1	; 0x01
 8a0:	82 81       	ldd	r24, Z+2	; 0x02
 8a2:	93 81       	ldd	r25, Z+3	; 0x03
 8a4:	0c 5f       	subi	r16, 0xFC	; 252
 8a6:	1f 4f       	sbci	r17, 0xFF	; 255
 8a8:	08 c0       	rjmp	.+16     	; 0x8ba <vfprintf+0x1f6>
 8aa:	60 81       	ld	r22, Z
 8ac:	71 81       	ldd	r23, Z+1	; 0x01
 8ae:	07 2e       	mov	r0, r23
 8b0:	00 0c       	add	r0, r0
 8b2:	88 0b       	sbc	r24, r24
 8b4:	99 0b       	sbc	r25, r25
 8b6:	0e 5f       	subi	r16, 0xFE	; 254
 8b8:	1f 4f       	sbci	r17, 0xFF	; 255
 8ba:	f3 2d       	mov	r31, r3
 8bc:	ff 76       	andi	r31, 0x6F	; 111
 8be:	3f 2e       	mov	r3, r31
 8c0:	97 ff       	sbrs	r25, 7
 8c2:	09 c0       	rjmp	.+18     	; 0x8d6 <vfprintf+0x212>
 8c4:	90 95       	com	r25
 8c6:	80 95       	com	r24
 8c8:	70 95       	com	r23
 8ca:	61 95       	neg	r22
 8cc:	7f 4f       	sbci	r23, 0xFF	; 255
 8ce:	8f 4f       	sbci	r24, 0xFF	; 255
 8d0:	9f 4f       	sbci	r25, 0xFF	; 255
 8d2:	f0 68       	ori	r31, 0x80	; 128
 8d4:	3f 2e       	mov	r3, r31
 8d6:	2a e0       	ldi	r18, 0x0A	; 10
 8d8:	30 e0       	ldi	r19, 0x00	; 0
 8da:	a3 01       	movw	r20, r6
 8dc:	0e 94 95 05 	call	0xb2a	; 0xb2a <__ultoa_invert>
 8e0:	88 2e       	mov	r8, r24
 8e2:	86 18       	sub	r8, r6
 8e4:	45 c0       	rjmp	.+138    	; 0x970 <__stack+0x71>
 8e6:	85 37       	cpi	r24, 0x75	; 117
 8e8:	31 f4       	brne	.+12     	; 0x8f6 <vfprintf+0x232>
 8ea:	23 2d       	mov	r18, r3
 8ec:	2f 7e       	andi	r18, 0xEF	; 239
 8ee:	b2 2e       	mov	r11, r18
 8f0:	2a e0       	ldi	r18, 0x0A	; 10
 8f2:	30 e0       	ldi	r19, 0x00	; 0
 8f4:	25 c0       	rjmp	.+74     	; 0x940 <__stack+0x41>
 8f6:	93 2d       	mov	r25, r3
 8f8:	99 7f       	andi	r25, 0xF9	; 249
 8fa:	b9 2e       	mov	r11, r25
 8fc:	8f 36       	cpi	r24, 0x6F	; 111
 8fe:	c1 f0       	breq	.+48     	; 0x930 <__stack+0x31>
 900:	18 f4       	brcc	.+6      	; 0x908 <__stack+0x9>
 902:	88 35       	cpi	r24, 0x58	; 88
 904:	79 f0       	breq	.+30     	; 0x924 <__stack+0x25>
 906:	b5 c0       	rjmp	.+362    	; 0xa72 <__stack+0x173>
 908:	80 37       	cpi	r24, 0x70	; 112
 90a:	19 f0       	breq	.+6      	; 0x912 <__stack+0x13>
 90c:	88 37       	cpi	r24, 0x78	; 120
 90e:	21 f0       	breq	.+8      	; 0x918 <__stack+0x19>
 910:	b0 c0       	rjmp	.+352    	; 0xa72 <__stack+0x173>
 912:	e9 2f       	mov	r30, r25
 914:	e0 61       	ori	r30, 0x10	; 16
 916:	be 2e       	mov	r11, r30
 918:	b4 fe       	sbrs	r11, 4
 91a:	0d c0       	rjmp	.+26     	; 0x936 <__stack+0x37>
 91c:	fb 2d       	mov	r31, r11
 91e:	f4 60       	ori	r31, 0x04	; 4
 920:	bf 2e       	mov	r11, r31
 922:	09 c0       	rjmp	.+18     	; 0x936 <__stack+0x37>
 924:	34 fe       	sbrs	r3, 4
 926:	0a c0       	rjmp	.+20     	; 0x93c <__stack+0x3d>
 928:	29 2f       	mov	r18, r25
 92a:	26 60       	ori	r18, 0x06	; 6
 92c:	b2 2e       	mov	r11, r18
 92e:	06 c0       	rjmp	.+12     	; 0x93c <__stack+0x3d>
 930:	28 e0       	ldi	r18, 0x08	; 8
 932:	30 e0       	ldi	r19, 0x00	; 0
 934:	05 c0       	rjmp	.+10     	; 0x940 <__stack+0x41>
 936:	20 e1       	ldi	r18, 0x10	; 16
 938:	30 e0       	ldi	r19, 0x00	; 0
 93a:	02 c0       	rjmp	.+4      	; 0x940 <__stack+0x41>
 93c:	20 e1       	ldi	r18, 0x10	; 16
 93e:	32 e0       	ldi	r19, 0x02	; 2
 940:	f8 01       	movw	r30, r16
 942:	b7 fe       	sbrs	r11, 7
 944:	07 c0       	rjmp	.+14     	; 0x954 <__stack+0x55>
 946:	60 81       	ld	r22, Z
 948:	71 81       	ldd	r23, Z+1	; 0x01
 94a:	82 81       	ldd	r24, Z+2	; 0x02
 94c:	93 81       	ldd	r25, Z+3	; 0x03
 94e:	0c 5f       	subi	r16, 0xFC	; 252
 950:	1f 4f       	sbci	r17, 0xFF	; 255
 952:	06 c0       	rjmp	.+12     	; 0x960 <__stack+0x61>
 954:	60 81       	ld	r22, Z
 956:	71 81       	ldd	r23, Z+1	; 0x01
 958:	80 e0       	ldi	r24, 0x00	; 0
 95a:	90 e0       	ldi	r25, 0x00	; 0
 95c:	0e 5f       	subi	r16, 0xFE	; 254
 95e:	1f 4f       	sbci	r17, 0xFF	; 255
 960:	a3 01       	movw	r20, r6
 962:	0e 94 95 05 	call	0xb2a	; 0xb2a <__ultoa_invert>
 966:	88 2e       	mov	r8, r24
 968:	86 18       	sub	r8, r6
 96a:	fb 2d       	mov	r31, r11
 96c:	ff 77       	andi	r31, 0x7F	; 127
 96e:	3f 2e       	mov	r3, r31
 970:	36 fe       	sbrs	r3, 6
 972:	0d c0       	rjmp	.+26     	; 0x98e <__stack+0x8f>
 974:	23 2d       	mov	r18, r3
 976:	2e 7f       	andi	r18, 0xFE	; 254
 978:	a2 2e       	mov	r10, r18
 97a:	89 14       	cp	r8, r9
 97c:	58 f4       	brcc	.+22     	; 0x994 <__stack+0x95>
 97e:	34 fe       	sbrs	r3, 4
 980:	0b c0       	rjmp	.+22     	; 0x998 <__stack+0x99>
 982:	32 fc       	sbrc	r3, 2
 984:	09 c0       	rjmp	.+18     	; 0x998 <__stack+0x99>
 986:	83 2d       	mov	r24, r3
 988:	8e 7e       	andi	r24, 0xEE	; 238
 98a:	a8 2e       	mov	r10, r24
 98c:	05 c0       	rjmp	.+10     	; 0x998 <__stack+0x99>
 98e:	b8 2c       	mov	r11, r8
 990:	a3 2c       	mov	r10, r3
 992:	03 c0       	rjmp	.+6      	; 0x99a <__stack+0x9b>
 994:	b8 2c       	mov	r11, r8
 996:	01 c0       	rjmp	.+2      	; 0x99a <__stack+0x9b>
 998:	b9 2c       	mov	r11, r9
 99a:	a4 fe       	sbrs	r10, 4
 99c:	0f c0       	rjmp	.+30     	; 0x9bc <__stack+0xbd>
 99e:	fe 01       	movw	r30, r28
 9a0:	e8 0d       	add	r30, r8
 9a2:	f1 1d       	adc	r31, r1
 9a4:	80 81       	ld	r24, Z
 9a6:	80 33       	cpi	r24, 0x30	; 48
 9a8:	21 f4       	brne	.+8      	; 0x9b2 <__stack+0xb3>
 9aa:	9a 2d       	mov	r25, r10
 9ac:	99 7e       	andi	r25, 0xE9	; 233
 9ae:	a9 2e       	mov	r10, r25
 9b0:	09 c0       	rjmp	.+18     	; 0x9c4 <__stack+0xc5>
 9b2:	a2 fe       	sbrs	r10, 2
 9b4:	06 c0       	rjmp	.+12     	; 0x9c2 <__stack+0xc3>
 9b6:	b3 94       	inc	r11
 9b8:	b3 94       	inc	r11
 9ba:	04 c0       	rjmp	.+8      	; 0x9c4 <__stack+0xc5>
 9bc:	8a 2d       	mov	r24, r10
 9be:	86 78       	andi	r24, 0x86	; 134
 9c0:	09 f0       	breq	.+2      	; 0x9c4 <__stack+0xc5>
 9c2:	b3 94       	inc	r11
 9c4:	a3 fc       	sbrc	r10, 3
 9c6:	11 c0       	rjmp	.+34     	; 0x9ea <__stack+0xeb>
 9c8:	a0 fe       	sbrs	r10, 0
 9ca:	06 c0       	rjmp	.+12     	; 0x9d8 <__stack+0xd9>
 9cc:	b2 14       	cp	r11, r2
 9ce:	88 f4       	brcc	.+34     	; 0x9f2 <__stack+0xf3>
 9d0:	28 0c       	add	r2, r8
 9d2:	92 2c       	mov	r9, r2
 9d4:	9b 18       	sub	r9, r11
 9d6:	0e c0       	rjmp	.+28     	; 0x9f4 <__stack+0xf5>
 9d8:	b2 14       	cp	r11, r2
 9da:	60 f4       	brcc	.+24     	; 0x9f4 <__stack+0xf5>
 9dc:	b6 01       	movw	r22, r12
 9de:	80 e2       	ldi	r24, 0x20	; 32
 9e0:	90 e0       	ldi	r25, 0x00	; 0
 9e2:	0e 94 59 05 	call	0xab2	; 0xab2 <fputc>
 9e6:	b3 94       	inc	r11
 9e8:	f7 cf       	rjmp	.-18     	; 0x9d8 <__stack+0xd9>
 9ea:	b2 14       	cp	r11, r2
 9ec:	18 f4       	brcc	.+6      	; 0x9f4 <__stack+0xf5>
 9ee:	2b 18       	sub	r2, r11
 9f0:	02 c0       	rjmp	.+4      	; 0x9f6 <__stack+0xf7>
 9f2:	98 2c       	mov	r9, r8
 9f4:	21 2c       	mov	r2, r1
 9f6:	a4 fe       	sbrs	r10, 4
 9f8:	10 c0       	rjmp	.+32     	; 0xa1a <__stack+0x11b>
 9fa:	b6 01       	movw	r22, r12
 9fc:	80 e3       	ldi	r24, 0x30	; 48
 9fe:	90 e0       	ldi	r25, 0x00	; 0
 a00:	0e 94 59 05 	call	0xab2	; 0xab2 <fputc>
 a04:	a2 fe       	sbrs	r10, 2
 a06:	17 c0       	rjmp	.+46     	; 0xa36 <__stack+0x137>
 a08:	a1 fc       	sbrc	r10, 1
 a0a:	03 c0       	rjmp	.+6      	; 0xa12 <__stack+0x113>
 a0c:	88 e7       	ldi	r24, 0x78	; 120
 a0e:	90 e0       	ldi	r25, 0x00	; 0
 a10:	02 c0       	rjmp	.+4      	; 0xa16 <__stack+0x117>
 a12:	88 e5       	ldi	r24, 0x58	; 88
 a14:	90 e0       	ldi	r25, 0x00	; 0
 a16:	b6 01       	movw	r22, r12
 a18:	0c c0       	rjmp	.+24     	; 0xa32 <__stack+0x133>
 a1a:	8a 2d       	mov	r24, r10
 a1c:	86 78       	andi	r24, 0x86	; 134
 a1e:	59 f0       	breq	.+22     	; 0xa36 <__stack+0x137>
 a20:	a1 fe       	sbrs	r10, 1
 a22:	02 c0       	rjmp	.+4      	; 0xa28 <__stack+0x129>
 a24:	8b e2       	ldi	r24, 0x2B	; 43
 a26:	01 c0       	rjmp	.+2      	; 0xa2a <__stack+0x12b>
 a28:	80 e2       	ldi	r24, 0x20	; 32
 a2a:	a7 fc       	sbrc	r10, 7
 a2c:	8d e2       	ldi	r24, 0x2D	; 45
 a2e:	b6 01       	movw	r22, r12
 a30:	90 e0       	ldi	r25, 0x00	; 0
 a32:	0e 94 59 05 	call	0xab2	; 0xab2 <fputc>
 a36:	89 14       	cp	r8, r9
 a38:	38 f4       	brcc	.+14     	; 0xa48 <__stack+0x149>
 a3a:	b6 01       	movw	r22, r12
 a3c:	80 e3       	ldi	r24, 0x30	; 48
 a3e:	90 e0       	ldi	r25, 0x00	; 0
 a40:	0e 94 59 05 	call	0xab2	; 0xab2 <fputc>
 a44:	9a 94       	dec	r9
 a46:	f7 cf       	rjmp	.-18     	; 0xa36 <__stack+0x137>
 a48:	8a 94       	dec	r8
 a4a:	f3 01       	movw	r30, r6
 a4c:	e8 0d       	add	r30, r8
 a4e:	f1 1d       	adc	r31, r1
 a50:	80 81       	ld	r24, Z
 a52:	b6 01       	movw	r22, r12
 a54:	90 e0       	ldi	r25, 0x00	; 0
 a56:	0e 94 59 05 	call	0xab2	; 0xab2 <fputc>
 a5a:	81 10       	cpse	r8, r1
 a5c:	f5 cf       	rjmp	.-22     	; 0xa48 <__stack+0x149>
 a5e:	22 20       	and	r2, r2
 a60:	09 f4       	brne	.+2      	; 0xa64 <__stack+0x165>
 a62:	42 ce       	rjmp	.-892    	; 0x6e8 <vfprintf+0x24>
 a64:	b6 01       	movw	r22, r12
 a66:	80 e2       	ldi	r24, 0x20	; 32
 a68:	90 e0       	ldi	r25, 0x00	; 0
 a6a:	0e 94 59 05 	call	0xab2	; 0xab2 <fputc>
 a6e:	2a 94       	dec	r2
 a70:	f6 cf       	rjmp	.-20     	; 0xa5e <__stack+0x15f>
 a72:	f6 01       	movw	r30, r12
 a74:	86 81       	ldd	r24, Z+6	; 0x06
 a76:	97 81       	ldd	r25, Z+7	; 0x07
 a78:	02 c0       	rjmp	.+4      	; 0xa7e <__stack+0x17f>
 a7a:	8f ef       	ldi	r24, 0xFF	; 255
 a7c:	9f ef       	ldi	r25, 0xFF	; 255
 a7e:	2b 96       	adiw	r28, 0x0b	; 11
 a80:	e2 e1       	ldi	r30, 0x12	; 18
 a82:	0c 94 0f 06 	jmp	0xc1e	; 0xc1e <__epilogue_restores__>

00000a86 <strnlen_P>:
 a86:	fc 01       	movw	r30, r24
 a88:	05 90       	lpm	r0, Z+
 a8a:	61 50       	subi	r22, 0x01	; 1
 a8c:	70 40       	sbci	r23, 0x00	; 0
 a8e:	01 10       	cpse	r0, r1
 a90:	d8 f7       	brcc	.-10     	; 0xa88 <strnlen_P+0x2>
 a92:	80 95       	com	r24
 a94:	90 95       	com	r25
 a96:	8e 0f       	add	r24, r30
 a98:	9f 1f       	adc	r25, r31
 a9a:	08 95       	ret

00000a9c <strnlen>:
 a9c:	fc 01       	movw	r30, r24
 a9e:	61 50       	subi	r22, 0x01	; 1
 aa0:	70 40       	sbci	r23, 0x00	; 0
 aa2:	01 90       	ld	r0, Z+
 aa4:	01 10       	cpse	r0, r1
 aa6:	d8 f7       	brcc	.-10     	; 0xa9e <strnlen+0x2>
 aa8:	80 95       	com	r24
 aaa:	90 95       	com	r25
 aac:	8e 0f       	add	r24, r30
 aae:	9f 1f       	adc	r25, r31
 ab0:	08 95       	ret

00000ab2 <fputc>:
 ab2:	0f 93       	push	r16
 ab4:	1f 93       	push	r17
 ab6:	cf 93       	push	r28
 ab8:	df 93       	push	r29
 aba:	fb 01       	movw	r30, r22
 abc:	23 81       	ldd	r18, Z+3	; 0x03
 abe:	21 fd       	sbrc	r18, 1
 ac0:	03 c0       	rjmp	.+6      	; 0xac8 <fputc+0x16>
 ac2:	8f ef       	ldi	r24, 0xFF	; 255
 ac4:	9f ef       	ldi	r25, 0xFF	; 255
 ac6:	2c c0       	rjmp	.+88     	; 0xb20 <fputc+0x6e>
 ac8:	22 ff       	sbrs	r18, 2
 aca:	16 c0       	rjmp	.+44     	; 0xaf8 <fputc+0x46>
 acc:	46 81       	ldd	r20, Z+6	; 0x06
 ace:	57 81       	ldd	r21, Z+7	; 0x07
 ad0:	24 81       	ldd	r18, Z+4	; 0x04
 ad2:	35 81       	ldd	r19, Z+5	; 0x05
 ad4:	42 17       	cp	r20, r18
 ad6:	53 07       	cpc	r21, r19
 ad8:	44 f4       	brge	.+16     	; 0xaea <fputc+0x38>
 ada:	a0 81       	ld	r26, Z
 adc:	b1 81       	ldd	r27, Z+1	; 0x01
 ade:	9d 01       	movw	r18, r26
 ae0:	2f 5f       	subi	r18, 0xFF	; 255
 ae2:	3f 4f       	sbci	r19, 0xFF	; 255
 ae4:	31 83       	std	Z+1, r19	; 0x01
 ae6:	20 83       	st	Z, r18
 ae8:	8c 93       	st	X, r24
 aea:	26 81       	ldd	r18, Z+6	; 0x06
 aec:	37 81       	ldd	r19, Z+7	; 0x07
 aee:	2f 5f       	subi	r18, 0xFF	; 255
 af0:	3f 4f       	sbci	r19, 0xFF	; 255
 af2:	37 83       	std	Z+7, r19	; 0x07
 af4:	26 83       	std	Z+6, r18	; 0x06
 af6:	14 c0       	rjmp	.+40     	; 0xb20 <fputc+0x6e>
 af8:	8b 01       	movw	r16, r22
 afa:	ec 01       	movw	r28, r24
 afc:	fb 01       	movw	r30, r22
 afe:	00 84       	ldd	r0, Z+8	; 0x08
 b00:	f1 85       	ldd	r31, Z+9	; 0x09
 b02:	e0 2d       	mov	r30, r0
 b04:	09 95       	icall
 b06:	89 2b       	or	r24, r25
 b08:	e1 f6       	brne	.-72     	; 0xac2 <fputc+0x10>
 b0a:	d8 01       	movw	r26, r16
 b0c:	16 96       	adiw	r26, 0x06	; 6
 b0e:	8d 91       	ld	r24, X+
 b10:	9c 91       	ld	r25, X
 b12:	17 97       	sbiw	r26, 0x07	; 7
 b14:	01 96       	adiw	r24, 0x01	; 1
 b16:	17 96       	adiw	r26, 0x07	; 7
 b18:	9c 93       	st	X, r25
 b1a:	8e 93       	st	-X, r24
 b1c:	16 97       	sbiw	r26, 0x06	; 6
 b1e:	ce 01       	movw	r24, r28
 b20:	df 91       	pop	r29
 b22:	cf 91       	pop	r28
 b24:	1f 91       	pop	r17
 b26:	0f 91       	pop	r16
 b28:	08 95       	ret

00000b2a <__ultoa_invert>:
 b2a:	fa 01       	movw	r30, r20
 b2c:	aa 27       	eor	r26, r26
 b2e:	28 30       	cpi	r18, 0x08	; 8
 b30:	51 f1       	breq	.+84     	; 0xb86 <__ultoa_invert+0x5c>
 b32:	20 31       	cpi	r18, 0x10	; 16
 b34:	81 f1       	breq	.+96     	; 0xb96 <__ultoa_invert+0x6c>
 b36:	e8 94       	clt
 b38:	6f 93       	push	r22
 b3a:	6e 7f       	andi	r22, 0xFE	; 254
 b3c:	6e 5f       	subi	r22, 0xFE	; 254
 b3e:	7f 4f       	sbci	r23, 0xFF	; 255
 b40:	8f 4f       	sbci	r24, 0xFF	; 255
 b42:	9f 4f       	sbci	r25, 0xFF	; 255
 b44:	af 4f       	sbci	r26, 0xFF	; 255
 b46:	b1 e0       	ldi	r27, 0x01	; 1
 b48:	3e d0       	rcall	.+124    	; 0xbc6 <__ultoa_invert+0x9c>
 b4a:	b4 e0       	ldi	r27, 0x04	; 4
 b4c:	3c d0       	rcall	.+120    	; 0xbc6 <__ultoa_invert+0x9c>
 b4e:	67 0f       	add	r22, r23
 b50:	78 1f       	adc	r23, r24
 b52:	89 1f       	adc	r24, r25
 b54:	9a 1f       	adc	r25, r26
 b56:	a1 1d       	adc	r26, r1
 b58:	68 0f       	add	r22, r24
 b5a:	79 1f       	adc	r23, r25
 b5c:	8a 1f       	adc	r24, r26
 b5e:	91 1d       	adc	r25, r1
 b60:	a1 1d       	adc	r26, r1
 b62:	6a 0f       	add	r22, r26
 b64:	71 1d       	adc	r23, r1
 b66:	81 1d       	adc	r24, r1
 b68:	91 1d       	adc	r25, r1
 b6a:	a1 1d       	adc	r26, r1
 b6c:	20 d0       	rcall	.+64     	; 0xbae <__ultoa_invert+0x84>
 b6e:	09 f4       	brne	.+2      	; 0xb72 <__ultoa_invert+0x48>
 b70:	68 94       	set
 b72:	3f 91       	pop	r19
 b74:	2a e0       	ldi	r18, 0x0A	; 10
 b76:	26 9f       	mul	r18, r22
 b78:	11 24       	eor	r1, r1
 b7a:	30 19       	sub	r19, r0
 b7c:	30 5d       	subi	r19, 0xD0	; 208
 b7e:	31 93       	st	Z+, r19
 b80:	de f6       	brtc	.-74     	; 0xb38 <__ultoa_invert+0xe>
 b82:	cf 01       	movw	r24, r30
 b84:	08 95       	ret
 b86:	46 2f       	mov	r20, r22
 b88:	47 70       	andi	r20, 0x07	; 7
 b8a:	40 5d       	subi	r20, 0xD0	; 208
 b8c:	41 93       	st	Z+, r20
 b8e:	b3 e0       	ldi	r27, 0x03	; 3
 b90:	0f d0       	rcall	.+30     	; 0xbb0 <__ultoa_invert+0x86>
 b92:	c9 f7       	brne	.-14     	; 0xb86 <__ultoa_invert+0x5c>
 b94:	f6 cf       	rjmp	.-20     	; 0xb82 <__ultoa_invert+0x58>
 b96:	46 2f       	mov	r20, r22
 b98:	4f 70       	andi	r20, 0x0F	; 15
 b9a:	40 5d       	subi	r20, 0xD0	; 208
 b9c:	4a 33       	cpi	r20, 0x3A	; 58
 b9e:	18 f0       	brcs	.+6      	; 0xba6 <__ultoa_invert+0x7c>
 ba0:	49 5d       	subi	r20, 0xD9	; 217
 ba2:	31 fd       	sbrc	r19, 1
 ba4:	40 52       	subi	r20, 0x20	; 32
 ba6:	41 93       	st	Z+, r20
 ba8:	02 d0       	rcall	.+4      	; 0xbae <__ultoa_invert+0x84>
 baa:	a9 f7       	brne	.-22     	; 0xb96 <__ultoa_invert+0x6c>
 bac:	ea cf       	rjmp	.-44     	; 0xb82 <__ultoa_invert+0x58>
 bae:	b4 e0       	ldi	r27, 0x04	; 4
 bb0:	a6 95       	lsr	r26
 bb2:	97 95       	ror	r25
 bb4:	87 95       	ror	r24
 bb6:	77 95       	ror	r23
 bb8:	67 95       	ror	r22
 bba:	ba 95       	dec	r27
 bbc:	c9 f7       	brne	.-14     	; 0xbb0 <__ultoa_invert+0x86>
 bbe:	00 97       	sbiw	r24, 0x00	; 0
 bc0:	61 05       	cpc	r22, r1
 bc2:	71 05       	cpc	r23, r1
 bc4:	08 95       	ret
 bc6:	9b 01       	movw	r18, r22
 bc8:	ac 01       	movw	r20, r24
 bca:	0a 2e       	mov	r0, r26
 bcc:	06 94       	lsr	r0
 bce:	57 95       	ror	r21
 bd0:	47 95       	ror	r20
 bd2:	37 95       	ror	r19
 bd4:	27 95       	ror	r18
 bd6:	ba 95       	dec	r27
 bd8:	c9 f7       	brne	.-14     	; 0xbcc <__ultoa_invert+0xa2>
 bda:	62 0f       	add	r22, r18
 bdc:	73 1f       	adc	r23, r19
 bde:	84 1f       	adc	r24, r20
 be0:	95 1f       	adc	r25, r21
 be2:	a0 1d       	adc	r26, r0
 be4:	08 95       	ret

00000be6 <__prologue_saves__>:
 be6:	2f 92       	push	r2
 be8:	3f 92       	push	r3
 bea:	4f 92       	push	r4
 bec:	5f 92       	push	r5
 bee:	6f 92       	push	r6
 bf0:	7f 92       	push	r7
 bf2:	8f 92       	push	r8
 bf4:	9f 92       	push	r9
 bf6:	af 92       	push	r10
 bf8:	bf 92       	push	r11
 bfa:	cf 92       	push	r12
 bfc:	df 92       	push	r13
 bfe:	ef 92       	push	r14
 c00:	ff 92       	push	r15
 c02:	0f 93       	push	r16
 c04:	1f 93       	push	r17
 c06:	cf 93       	push	r28
 c08:	df 93       	push	r29
 c0a:	cd b7       	in	r28, 0x3d	; 61
 c0c:	de b7       	in	r29, 0x3e	; 62
 c0e:	ca 1b       	sub	r28, r26
 c10:	db 0b       	sbc	r29, r27
 c12:	0f b6       	in	r0, 0x3f	; 63
 c14:	f8 94       	cli
 c16:	de bf       	out	0x3e, r29	; 62
 c18:	0f be       	out	0x3f, r0	; 63
 c1a:	cd bf       	out	0x3d, r28	; 61
 c1c:	09 94       	ijmp

00000c1e <__epilogue_restores__>:
 c1e:	2a 88       	ldd	r2, Y+18	; 0x12
 c20:	39 88       	ldd	r3, Y+17	; 0x11
 c22:	48 88       	ldd	r4, Y+16	; 0x10
 c24:	5f 84       	ldd	r5, Y+15	; 0x0f
 c26:	6e 84       	ldd	r6, Y+14	; 0x0e
 c28:	7d 84       	ldd	r7, Y+13	; 0x0d
 c2a:	8c 84       	ldd	r8, Y+12	; 0x0c
 c2c:	9b 84       	ldd	r9, Y+11	; 0x0b
 c2e:	aa 84       	ldd	r10, Y+10	; 0x0a
 c30:	b9 84       	ldd	r11, Y+9	; 0x09
 c32:	c8 84       	ldd	r12, Y+8	; 0x08
 c34:	df 80       	ldd	r13, Y+7	; 0x07
 c36:	ee 80       	ldd	r14, Y+6	; 0x06
 c38:	fd 80       	ldd	r15, Y+5	; 0x05
 c3a:	0c 81       	ldd	r16, Y+4	; 0x04
 c3c:	1b 81       	ldd	r17, Y+3	; 0x03
 c3e:	aa 81       	ldd	r26, Y+2	; 0x02
 c40:	b9 81       	ldd	r27, Y+1	; 0x01
 c42:	ce 0f       	add	r28, r30
 c44:	d1 1d       	adc	r29, r1
 c46:	0f b6       	in	r0, 0x3f	; 63
 c48:	f8 94       	cli
 c4a:	de bf       	out	0x3e, r29	; 62
 c4c:	0f be       	out	0x3f, r0	; 63
 c4e:	cd bf       	out	0x3d, r28	; 61
 c50:	ed 01       	movw	r28, r26
 c52:	08 95       	ret

00000c54 <_exit>:
 c54:	f8 94       	cli

00000c56 <__stop_program>:
 c56:	ff cf       	rjmp	.-2      	; 0xc56 <__stop_program>
