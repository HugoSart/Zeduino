
ZeduinoTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  00000afe  00000b92  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000afe  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001a  00800112  00800112  00000ba4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000ba4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c00  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  00000c40  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001042  00000000  00000000  00000cc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a1f  00000000  00000000  00001d02  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000614  00000000  00000000  00002721  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000011c  00000000  00000000  00002d38  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000076f  00000000  00000000  00002e54  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004af  00000000  00000000  000035c3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  00003a72  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee ef       	ldi	r30, 0xFE	; 254
  7c:	fa e0       	ldi	r31, 0x0A	; 10
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 31       	cpi	r26, 0x12	; 18
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e1       	ldi	r26, 0x12	; 18
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ac 32       	cpi	r26, 0x2C	; 44
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 68 01 	call	0x2d0	; 0x2d0 <main>
  9e:	0c 94 7d 05 	jmp	0xafa	; 0xafa <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <_Z12uart_putcharcP6__file>:
			ENABLED, DISABLED
		};
		
		void mode(EPort port, EMode m) {
			if (m == INPUT) clr_bit(fcrio(port), nmr(port));
			else if (m == OUTPUT) set_bit(fcrio(port), nmr(port));
  a6:	cf 93       	push	r28
  a8:	c8 2f       	mov	r28, r24
  aa:	8a 30       	cpi	r24, 0x0A	; 10
  ac:	19 f4       	brne	.+6      	; 0xb4 <_Z12uart_putcharcP6__file+0xe>
  ae:	8d e0       	ldi	r24, 0x0D	; 13
  b0:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z12uart_putcharcP6__file>
  b4:	e0 ec       	ldi	r30, 0xC0	; 192
  b6:	f0 e0       	ldi	r31, 0x00	; 0
  b8:	80 81       	ld	r24, Z
  ba:	85 ff       	sbrs	r24, 5
  bc:	fd cf       	rjmp	.-6      	; 0xb8 <_Z12uart_putcharcP6__file+0x12>
  be:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
  c2:	80 e0       	ldi	r24, 0x00	; 0
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	cf 91       	pop	r28
  c8:	08 95       	ret

000000ca <_Z12uart_getcharP6__file>:
  ca:	e0 ec       	ldi	r30, 0xC0	; 192
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	80 81       	ld	r24, Z
  d0:	88 23       	and	r24, r24
  d2:	ec f7       	brge	.-6      	; 0xce <_Z12uart_getcharP6__file+0x4>
  d4:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	08 95       	ret

000000dc <_ZN7zeduino4util8delay_msEj>:
  dc:	00 97       	sbiw	r24, 0x00	; 0
  de:	41 f0       	breq	.+16     	; 0xf0 <_ZN7zeduino4util8delay_msEj+0x14>
  e0:	ef e9       	ldi	r30, 0x9F	; 159
  e2:	ff e0       	ldi	r31, 0x0F	; 15
  e4:	31 97       	sbiw	r30, 0x01	; 1
  e6:	f1 f7       	brne	.-4      	; 0xe4 <_ZN7zeduino4util8delay_msEj+0x8>
  e8:	00 c0       	rjmp	.+0      	; 0xea <_ZN7zeduino4util8delay_msEj+0xe>
  ea:	00 00       	nop
  ec:	01 97       	sbiw	r24, 0x01	; 1
  ee:	c1 f7       	brne	.-16     	; 0xe0 <_ZN7zeduino4util8delay_msEj+0x4>
  f0:	08 95       	ret

000000f2 <_ZN7zeduino4util8delay_usEj>:
  f2:	00 97       	sbiw	r24, 0x00	; 0
  f4:	31 f0       	breq	.+12     	; 0x102 <_ZN7zeduino4util8delay_usEj+0x10>
  f6:	25 e0       	ldi	r18, 0x05	; 5
  f8:	2a 95       	dec	r18
  fa:	f1 f7       	brne	.-4      	; 0xf8 <_ZN7zeduino4util8delay_usEj+0x6>
  fc:	00 00       	nop
  fe:	01 97       	sbiw	r24, 0x01	; 1
 100:	d1 f7       	brne	.-12     	; 0xf6 <_ZN7zeduino4util8delay_usEj+0x4>
 102:	08 95       	ret

00000104 <_Z9uart_initv>:

static FILE uart_io;

void uart_init(void) {
	
	uart_io.put = uart_putchar;
 104:	e4 e1       	ldi	r30, 0x14	; 20
 106:	f1 e0       	ldi	r31, 0x01	; 1
 108:	83 e5       	ldi	r24, 0x53	; 83
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	91 87       	std	Z+9, r25	; 0x09
 10e:	80 87       	std	Z+8, r24	; 0x08
	uart_io.get = uart_getchar;
 110:	85 e6       	ldi	r24, 0x65	; 101
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	93 87       	std	Z+11, r25	; 0x0b
 116:	82 87       	std	Z+10, r24	; 0x0a
	uart_io.flags = _FDEV_SETUP_RW;
 118:	83 e0       	ldi	r24, 0x03	; 3
 11a:	83 83       	std	Z+3, r24	; 0x03
	uart_io.udata = 0;
 11c:	15 86       	std	Z+13, r1	; 0x0d
 11e:	14 86       	std	Z+12, r1	; 0x0c
	
	UBRR0H = UBRRH_VALUE;
 120:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = UBRRL_VALUE;
 124:	87 e6       	ldi	r24, 0x67	; 103
 126:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>

	#if USE_2X
	UCSR0A |= _BV(U2X0);
	#else
	UCSR0A &= ~(_BV(U2X0));
 12a:	a0 ec       	ldi	r26, 0xC0	; 192
 12c:	b0 e0       	ldi	r27, 0x00	; 0
 12e:	8c 91       	ld	r24, X
 130:	8d 7f       	andi	r24, 0xFD	; 253
 132:	8c 93       	st	X, r24
	#endif

	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); /* 8-bit data */
 134:	86 e0       	ldi	r24, 0x06	; 6
 136:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);   /* Enable RX and TX */
 13a:	88 e1       	ldi	r24, 0x18	; 24
 13c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>

	stdout = &uart_io;
 140:	a6 e2       	ldi	r26, 0x26	; 38
 142:	b1 e0       	ldi	r27, 0x01	; 1
 144:	13 96       	adiw	r26, 0x03	; 3
 146:	fc 93       	st	X, r31
 148:	ee 93       	st	-X, r30
 14a:	12 97       	sbiw	r26, 0x02	; 2
	stdin = &uart_io;
 14c:	ed 93       	st	X+, r30
 14e:	fc 93       	st	X, r31
 150:	08 95       	ret

00000152 <_ZN7zeduino5debug3logEPKcz>:

namespace zeduino {
	
	namespace debug {
		
		void log(const char *format, ...) {
 152:	cf 93       	push	r28
 154:	df 93       	push	r29
 156:	cd b7       	in	r28, 0x3d	; 61
 158:	de b7       	in	r29, 0x3e	; 62
 15a:	2d 81       	ldd	r18, Y+5	; 0x05
 15c:	3e 81       	ldd	r19, Y+6	; 0x06
			va_list args;
			va_start(args, format);
 15e:	ce 01       	movw	r24, r28
 160:	07 96       	adiw	r24, 0x07	; 7
			printf(format, args);
 162:	9f 93       	push	r25
 164:	8f 93       	push	r24
 166:	3f 93       	push	r19
 168:	2f 93       	push	r18
 16a:	0e 94 9f 02 	call	0x53e	; 0x53e <printf>
			va_end(args);
		}
 16e:	0f 90       	pop	r0
 170:	0f 90       	pop	r0
 172:	0f 90       	pop	r0
 174:	0f 90       	pop	r0
 176:	df 91       	pop	r29
 178:	cf 91       	pop	r28
 17a:	08 95       	ret

0000017c <_Z5setupv>:
		enum EState {
			ENABLED, DISABLED
		};
		
		void mode(EPort port, EMode m) {
			if (m == INPUT) clr_bit(fcrio(port), nmr(port));
 17c:	56 98       	cbi	0x0a, 6	; 10
			else if (m == OUTPUT) set_bit(fcrio(port), nmr(port));
 17e:	57 9a       	sbi	0x0a, 7	; 10
typedef int16_t int16;
typedef uint8_t uint8;
typedef uint16_t uint16;

void * operator new(size_t size) {
	return malloc(size);	
 180:	84 e0       	ldi	r24, 0x04	; 4
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	0e 94 7e 01 	call	0x2fc	; 0x2fc <malloc>
		class Sonar : public Component {
		
			private: const EPort _triggerPort, _echoPort;
			private: uint16 count;
			
			public: Sonar(EPort triggerPort, EPort echoPort) : _triggerPort(triggerPort), _echoPort(echoPort) {}
 188:	27 e0       	ldi	r18, 0x07	; 7
 18a:	fc 01       	movw	r30, r24
 18c:	20 83       	st	Z, r18
 18e:	26 e0       	ldi	r18, 0x06	; 6
 190:	21 83       	std	Z+1, r18	; 0x01
component::Sonar *sonar;

void setup() {
	port::mode(P6, INPUT);
	port::mode(P7, OUTPUT);
	sonar = new component::Sonar(P7, P6);
 192:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <__data_end+0x1>
 196:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <__data_end>
 19a:	08 95       	ret

0000019c <_Z4loopv>:
}

void loop() {
 19c:	0f 93       	push	r16
 19e:	1f 93       	push	r17
 1a0:	cf 93       	push	r28
 1a2:	df 93       	push	r29
	debug::log("distancia: " + sonar->ReadDistance());
 1a4:	c0 91 12 01 	lds	r28, 0x0112	; 0x800112 <__data_end>
 1a8:	d0 91 13 01 	lds	r29, 0x0113	; 0x800113 <__data_end+0x1>
				
			public: uint16 ReadDistance() {
				
				port::enable(_triggerPort);
 1ac:	88 81       	ld	r24, Y
		inline EMode get_mode(EPort port) {
			return (EMode)tst_bit(fcrio(port), nmr(port));
		}
		
		inline void enable(EPort port) {
			set_bit(fcrof(port), nmr(port));
 1ae:	88 30       	cpi	r24, 0x08	; 8
 1b0:	70 f4       	brcc	.+28     	; 0x1ce <_Z4loopv+0x32>
 1b2:	4b b1       	in	r20, 0x0b	; 11
 1b4:	87 70       	andi	r24, 0x07	; 7
 1b6:	21 e0       	ldi	r18, 0x01	; 1
 1b8:	30 e0       	ldi	r19, 0x00	; 0
 1ba:	b9 01       	movw	r22, r18
 1bc:	02 c0       	rjmp	.+4      	; 0x1c2 <_Z4loopv+0x26>
 1be:	66 0f       	add	r22, r22
 1c0:	77 1f       	adc	r23, r23
 1c2:	8a 95       	dec	r24
 1c4:	e2 f7       	brpl	.-8      	; 0x1be <_Z4loopv+0x22>
 1c6:	cb 01       	movw	r24, r22
 1c8:	84 2b       	or	r24, r20
 1ca:	8b b9       	out	0x0b, r24	; 11
 1cc:	0d c0       	rjmp	.+26     	; 0x1e8 <_Z4loopv+0x4c>
 1ce:	45 b1       	in	r20, 0x05	; 5
 1d0:	87 70       	andi	r24, 0x07	; 7
 1d2:	21 e0       	ldi	r18, 0x01	; 1
 1d4:	30 e0       	ldi	r19, 0x00	; 0
 1d6:	b9 01       	movw	r22, r18
 1d8:	02 c0       	rjmp	.+4      	; 0x1de <_Z4loopv+0x42>
 1da:	66 0f       	add	r22, r22
 1dc:	77 1f       	adc	r23, r23
 1de:	8a 95       	dec	r24
 1e0:	e2 f7       	brpl	.-8      	; 0x1da <_Z4loopv+0x3e>
 1e2:	cb 01       	movw	r24, r22
 1e4:	84 2b       	or	r24, r20
 1e6:	85 b9       	out	0x05, r24	; 5
				util::delay_us(10);
 1e8:	8a e0       	ldi	r24, 0x0A	; 10
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	0e 94 79 00 	call	0xf2	; 0xf2 <_ZN7zeduino4util8delay_usEj>
				port::disable(_triggerPort);
 1f0:	88 81       	ld	r24, Y
			if (b) set_bit(fcrof(port), nmr(port));
			else clr_bit(fcrof(port), nmr(port));
		}
		
		inline void disable(EPort port) {
			clr_bit(fcrof(port), nmr(port));
 1f2:	88 30       	cpi	r24, 0x08	; 8
 1f4:	78 f4       	brcc	.+30     	; 0x214 <_Z4loopv+0x78>
 1f6:	4b b1       	in	r20, 0x0b	; 11
 1f8:	87 70       	andi	r24, 0x07	; 7
 1fa:	21 e0       	ldi	r18, 0x01	; 1
 1fc:	30 e0       	ldi	r19, 0x00	; 0
 1fe:	b9 01       	movw	r22, r18
 200:	02 c0       	rjmp	.+4      	; 0x206 <_Z4loopv+0x6a>
 202:	66 0f       	add	r22, r22
 204:	77 1f       	adc	r23, r23
 206:	8a 95       	dec	r24
 208:	e2 f7       	brpl	.-8      	; 0x202 <_Z4loopv+0x66>
 20a:	cb 01       	movw	r24, r22
 20c:	80 95       	com	r24
 20e:	84 23       	and	r24, r20
 210:	8b b9       	out	0x0b, r24	; 11
 212:	0e c0       	rjmp	.+28     	; 0x230 <_Z4loopv+0x94>
 214:	45 b1       	in	r20, 0x05	; 5
 216:	87 70       	andi	r24, 0x07	; 7
 218:	21 e0       	ldi	r18, 0x01	; 1
 21a:	30 e0       	ldi	r19, 0x00	; 0
 21c:	b9 01       	movw	r22, r18
 21e:	02 c0       	rjmp	.+4      	; 0x224 <_Z4loopv+0x88>
 220:	66 0f       	add	r22, r22
 222:	77 1f       	adc	r23, r23
 224:	8a 95       	dec	r24
 226:	e2 f7       	brpl	.-8      	; 0x220 <_Z4loopv+0x84>
 228:	cb 01       	movw	r24, r22
 22a:	80 95       	com	r24
 22c:	84 23       	and	r24, r20
 22e:	85 b9       	out	0x05, r24	; 5
				
				while (!port::read(_echoPort));
 230:	49 81       	ldd	r20, Y+1	; 0x01
		inline bool is_enabled(EPort port) {
			return tst_bit(fcrof(port), nmr(port));
		}
		
		inline uint16 read(EPort port) {
			return tst_bit(fcrin(port), nmr(port));
 232:	84 2f       	mov	r24, r20
 234:	87 70       	andi	r24, 0x07	; 7
 236:	21 e0       	ldi	r18, 0x01	; 1
 238:	30 e0       	ldi	r19, 0x00	; 0
 23a:	02 c0       	rjmp	.+4      	; 0x240 <_Z4loopv+0xa4>
 23c:	22 0f       	add	r18, r18
 23e:	33 1f       	adc	r19, r19
 240:	8a 95       	dec	r24
 242:	e2 f7       	brpl	.-8      	; 0x23c <_Z4loopv+0xa0>
 244:	48 30       	cpi	r20, 0x08	; 8
 246:	10 f4       	brcc	.+4      	; 0x24c <_Z4loopv+0xb0>
 248:	89 b1       	in	r24, 0x09	; 9
 24a:	01 c0       	rjmp	.+2      	; 0x24e <_Z4loopv+0xb2>
 24c:	83 b1       	in	r24, 0x03	; 3
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	82 23       	and	r24, r18
 252:	93 23       	and	r25, r19
 254:	89 2b       	or	r24, r25
 256:	b1 f3       	breq	.-20     	; 0x244 <_Z4loopv+0xa8>
				TCNT1 = 0;
 258:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 25c:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
				
				while (port::read(_echoPort));
 260:	49 81       	ldd	r20, Y+1	; 0x01
 262:	84 2f       	mov	r24, r20
 264:	87 70       	andi	r24, 0x07	; 7
 266:	21 e0       	ldi	r18, 0x01	; 1
 268:	30 e0       	ldi	r19, 0x00	; 0
 26a:	02 c0       	rjmp	.+4      	; 0x270 <_Z4loopv+0xd4>
 26c:	22 0f       	add	r18, r18
 26e:	33 1f       	adc	r19, r19
 270:	8a 95       	dec	r24
 272:	e2 f7       	brpl	.-8      	; 0x26c <_Z4loopv+0xd0>
 274:	48 30       	cpi	r20, 0x08	; 8
 276:	10 f4       	brcc	.+4      	; 0x27c <_Z4loopv+0xe0>
 278:	89 b1       	in	r24, 0x09	; 9
 27a:	01 c0       	rjmp	.+2      	; 0x27e <_Z4loopv+0xe2>
 27c:	83 b1       	in	r24, 0x03	; 3
 27e:	90 e0       	ldi	r25, 0x00	; 0
 280:	82 23       	and	r24, r18
 282:	93 23       	and	r25, r19
 284:	89 2b       	or	r24, r25
 286:	b1 f7       	brne	.-20     	; 0x274 <_Z4loopv+0xd8>
				count = TCNT1;
 288:	00 91 84 00 	lds	r16, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 28c:	10 91 85 00 	lds	r17, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 290:	1b 83       	std	Y+3, r17	; 0x03
 292:	0a 83       	std	Y+2, r16	; 0x02
				
				uint16 ret = (uint16)(count / 116);
				util::delay_ms(60);
 294:	8c e3       	ldi	r24, 0x3C	; 60
 296:	90 e0       	ldi	r25, 0x00	; 0
 298:	0e 94 6e 00 	call	0xdc	; 0xdc <_ZN7zeduino4util8delay_msEj>
 29c:	98 01       	movw	r18, r16
 29e:	af e9       	ldi	r26, 0x9F	; 159
 2a0:	b6 e4       	ldi	r27, 0x46	; 70
 2a2:	0e 94 6f 01 	call	0x2de	; 0x2de <__umulhisi3>
 2a6:	96 95       	lsr	r25
 2a8:	87 95       	ror	r24
 2aa:	92 95       	swap	r25
 2ac:	82 95       	swap	r24
 2ae:	8f 70       	andi	r24, 0x0F	; 15
 2b0:	89 27       	eor	r24, r25
 2b2:	9f 70       	andi	r25, 0x0F	; 15
 2b4:	89 27       	eor	r24, r25
 2b6:	8a 5f       	subi	r24, 0xFA	; 250
 2b8:	9e 4f       	sbci	r25, 0xFE	; 254
 2ba:	9f 93       	push	r25
 2bc:	8f 93       	push	r24
 2be:	0e 94 a9 00 	call	0x152	; 0x152 <_ZN7zeduino5debug3logEPKcz>
}
 2c2:	0f 90       	pop	r0
 2c4:	0f 90       	pop	r0
 2c6:	df 91       	pop	r29
 2c8:	cf 91       	pop	r28
 2ca:	1f 91       	pop	r17
 2cc:	0f 91       	pop	r16
 2ce:	08 95       	ret

000002d0 <main>:
void setup();
void loop();

extern "C" {
	int main() {
		uart_init();
 2d0:	0e 94 82 00 	call	0x104	; 0x104 <_Z9uart_initv>
		setup();
 2d4:	0e 94 be 00 	call	0x17c	; 0x17c <_Z5setupv>
		while (true) loop();
 2d8:	0e 94 ce 00 	call	0x19c	; 0x19c <_Z4loopv>
 2dc:	fd cf       	rjmp	.-6      	; 0x2d8 <main+0x8>

000002de <__umulhisi3>:
 2de:	a2 9f       	mul	r26, r18
 2e0:	b0 01       	movw	r22, r0
 2e2:	b3 9f       	mul	r27, r19
 2e4:	c0 01       	movw	r24, r0
 2e6:	a3 9f       	mul	r26, r19
 2e8:	70 0d       	add	r23, r0
 2ea:	81 1d       	adc	r24, r1
 2ec:	11 24       	eor	r1, r1
 2ee:	91 1d       	adc	r25, r1
 2f0:	b2 9f       	mul	r27, r18
 2f2:	70 0d       	add	r23, r0
 2f4:	81 1d       	adc	r24, r1
 2f6:	11 24       	eor	r1, r1
 2f8:	91 1d       	adc	r25, r1
 2fa:	08 95       	ret

000002fc <malloc>:
 2fc:	0f 93       	push	r16
 2fe:	1f 93       	push	r17
 300:	cf 93       	push	r28
 302:	df 93       	push	r29
 304:	82 30       	cpi	r24, 0x02	; 2
 306:	91 05       	cpc	r25, r1
 308:	10 f4       	brcc	.+4      	; 0x30e <malloc+0x12>
 30a:	82 e0       	ldi	r24, 0x02	; 2
 30c:	90 e0       	ldi	r25, 0x00	; 0
 30e:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <__flp>
 312:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <__flp+0x1>
 316:	20 e0       	ldi	r18, 0x00	; 0
 318:	30 e0       	ldi	r19, 0x00	; 0
 31a:	a0 e0       	ldi	r26, 0x00	; 0
 31c:	b0 e0       	ldi	r27, 0x00	; 0
 31e:	30 97       	sbiw	r30, 0x00	; 0
 320:	19 f1       	breq	.+70     	; 0x368 <malloc+0x6c>
 322:	40 81       	ld	r20, Z
 324:	51 81       	ldd	r21, Z+1	; 0x01
 326:	02 81       	ldd	r16, Z+2	; 0x02
 328:	13 81       	ldd	r17, Z+3	; 0x03
 32a:	48 17       	cp	r20, r24
 32c:	59 07       	cpc	r21, r25
 32e:	c8 f0       	brcs	.+50     	; 0x362 <malloc+0x66>
 330:	84 17       	cp	r24, r20
 332:	95 07       	cpc	r25, r21
 334:	69 f4       	brne	.+26     	; 0x350 <malloc+0x54>
 336:	10 97       	sbiw	r26, 0x00	; 0
 338:	31 f0       	breq	.+12     	; 0x346 <malloc+0x4a>
 33a:	12 96       	adiw	r26, 0x02	; 2
 33c:	0c 93       	st	X, r16
 33e:	12 97       	sbiw	r26, 0x02	; 2
 340:	13 96       	adiw	r26, 0x03	; 3
 342:	1c 93       	st	X, r17
 344:	27 c0       	rjmp	.+78     	; 0x394 <malloc+0x98>
 346:	00 93 24 01 	sts	0x0124, r16	; 0x800124 <__flp>
 34a:	10 93 25 01 	sts	0x0125, r17	; 0x800125 <__flp+0x1>
 34e:	22 c0       	rjmp	.+68     	; 0x394 <malloc+0x98>
 350:	21 15       	cp	r18, r1
 352:	31 05       	cpc	r19, r1
 354:	19 f0       	breq	.+6      	; 0x35c <malloc+0x60>
 356:	42 17       	cp	r20, r18
 358:	53 07       	cpc	r21, r19
 35a:	18 f4       	brcc	.+6      	; 0x362 <malloc+0x66>
 35c:	9a 01       	movw	r18, r20
 35e:	bd 01       	movw	r22, r26
 360:	ef 01       	movw	r28, r30
 362:	df 01       	movw	r26, r30
 364:	f8 01       	movw	r30, r16
 366:	db cf       	rjmp	.-74     	; 0x31e <malloc+0x22>
 368:	21 15       	cp	r18, r1
 36a:	31 05       	cpc	r19, r1
 36c:	f9 f0       	breq	.+62     	; 0x3ac <malloc+0xb0>
 36e:	28 1b       	sub	r18, r24
 370:	39 0b       	sbc	r19, r25
 372:	24 30       	cpi	r18, 0x04	; 4
 374:	31 05       	cpc	r19, r1
 376:	80 f4       	brcc	.+32     	; 0x398 <malloc+0x9c>
 378:	8a 81       	ldd	r24, Y+2	; 0x02
 37a:	9b 81       	ldd	r25, Y+3	; 0x03
 37c:	61 15       	cp	r22, r1
 37e:	71 05       	cpc	r23, r1
 380:	21 f0       	breq	.+8      	; 0x38a <malloc+0x8e>
 382:	fb 01       	movw	r30, r22
 384:	93 83       	std	Z+3, r25	; 0x03
 386:	82 83       	std	Z+2, r24	; 0x02
 388:	04 c0       	rjmp	.+8      	; 0x392 <malloc+0x96>
 38a:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <__flp+0x1>
 38e:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <__flp>
 392:	fe 01       	movw	r30, r28
 394:	32 96       	adiw	r30, 0x02	; 2
 396:	44 c0       	rjmp	.+136    	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 398:	fe 01       	movw	r30, r28
 39a:	e2 0f       	add	r30, r18
 39c:	f3 1f       	adc	r31, r19
 39e:	81 93       	st	Z+, r24
 3a0:	91 93       	st	Z+, r25
 3a2:	22 50       	subi	r18, 0x02	; 2
 3a4:	31 09       	sbc	r19, r1
 3a6:	39 83       	std	Y+1, r19	; 0x01
 3a8:	28 83       	st	Y, r18
 3aa:	3a c0       	rjmp	.+116    	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 3ac:	20 91 22 01 	lds	r18, 0x0122	; 0x800122 <__brkval>
 3b0:	30 91 23 01 	lds	r19, 0x0123	; 0x800123 <__brkval+0x1>
 3b4:	23 2b       	or	r18, r19
 3b6:	41 f4       	brne	.+16     	; 0x3c8 <malloc+0xcc>
 3b8:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 3bc:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 3c0:	30 93 23 01 	sts	0x0123, r19	; 0x800123 <__brkval+0x1>
 3c4:	20 93 22 01 	sts	0x0122, r18	; 0x800122 <__brkval>
 3c8:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 3cc:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 3d0:	21 15       	cp	r18, r1
 3d2:	31 05       	cpc	r19, r1
 3d4:	41 f4       	brne	.+16     	; 0x3e6 <malloc+0xea>
 3d6:	2d b7       	in	r18, 0x3d	; 61
 3d8:	3e b7       	in	r19, 0x3e	; 62
 3da:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 3de:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 3e2:	24 1b       	sub	r18, r20
 3e4:	35 0b       	sbc	r19, r21
 3e6:	e0 91 22 01 	lds	r30, 0x0122	; 0x800122 <__brkval>
 3ea:	f0 91 23 01 	lds	r31, 0x0123	; 0x800123 <__brkval+0x1>
 3ee:	e2 17       	cp	r30, r18
 3f0:	f3 07       	cpc	r31, r19
 3f2:	a0 f4       	brcc	.+40     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3f4:	2e 1b       	sub	r18, r30
 3f6:	3f 0b       	sbc	r19, r31
 3f8:	28 17       	cp	r18, r24
 3fa:	39 07       	cpc	r19, r25
 3fc:	78 f0       	brcs	.+30     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3fe:	ac 01       	movw	r20, r24
 400:	4e 5f       	subi	r20, 0xFE	; 254
 402:	5f 4f       	sbci	r21, 0xFF	; 255
 404:	24 17       	cp	r18, r20
 406:	35 07       	cpc	r19, r21
 408:	48 f0       	brcs	.+18     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 40a:	4e 0f       	add	r20, r30
 40c:	5f 1f       	adc	r21, r31
 40e:	50 93 23 01 	sts	0x0123, r21	; 0x800123 <__brkval+0x1>
 412:	40 93 22 01 	sts	0x0122, r20	; 0x800122 <__brkval>
 416:	81 93       	st	Z+, r24
 418:	91 93       	st	Z+, r25
 41a:	02 c0       	rjmp	.+4      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 41c:	e0 e0       	ldi	r30, 0x00	; 0
 41e:	f0 e0       	ldi	r31, 0x00	; 0
 420:	cf 01       	movw	r24, r30
 422:	df 91       	pop	r29
 424:	cf 91       	pop	r28
 426:	1f 91       	pop	r17
 428:	0f 91       	pop	r16
 42a:	08 95       	ret

0000042c <free>:
 42c:	cf 93       	push	r28
 42e:	df 93       	push	r29
 430:	00 97       	sbiw	r24, 0x00	; 0
 432:	09 f4       	brne	.+2      	; 0x436 <free+0xa>
 434:	81 c0       	rjmp	.+258    	; 0x538 <free+0x10c>
 436:	fc 01       	movw	r30, r24
 438:	32 97       	sbiw	r30, 0x02	; 2
 43a:	13 82       	std	Z+3, r1	; 0x03
 43c:	12 82       	std	Z+2, r1	; 0x02
 43e:	a0 91 24 01 	lds	r26, 0x0124	; 0x800124 <__flp>
 442:	b0 91 25 01 	lds	r27, 0x0125	; 0x800125 <__flp+0x1>
 446:	10 97       	sbiw	r26, 0x00	; 0
 448:	81 f4       	brne	.+32     	; 0x46a <free+0x3e>
 44a:	20 81       	ld	r18, Z
 44c:	31 81       	ldd	r19, Z+1	; 0x01
 44e:	82 0f       	add	r24, r18
 450:	93 1f       	adc	r25, r19
 452:	20 91 22 01 	lds	r18, 0x0122	; 0x800122 <__brkval>
 456:	30 91 23 01 	lds	r19, 0x0123	; 0x800123 <__brkval+0x1>
 45a:	28 17       	cp	r18, r24
 45c:	39 07       	cpc	r19, r25
 45e:	51 f5       	brne	.+84     	; 0x4b4 <free+0x88>
 460:	f0 93 23 01 	sts	0x0123, r31	; 0x800123 <__brkval+0x1>
 464:	e0 93 22 01 	sts	0x0122, r30	; 0x800122 <__brkval>
 468:	67 c0       	rjmp	.+206    	; 0x538 <free+0x10c>
 46a:	ed 01       	movw	r28, r26
 46c:	20 e0       	ldi	r18, 0x00	; 0
 46e:	30 e0       	ldi	r19, 0x00	; 0
 470:	ce 17       	cp	r28, r30
 472:	df 07       	cpc	r29, r31
 474:	40 f4       	brcc	.+16     	; 0x486 <free+0x5a>
 476:	4a 81       	ldd	r20, Y+2	; 0x02
 478:	5b 81       	ldd	r21, Y+3	; 0x03
 47a:	9e 01       	movw	r18, r28
 47c:	41 15       	cp	r20, r1
 47e:	51 05       	cpc	r21, r1
 480:	f1 f0       	breq	.+60     	; 0x4be <free+0x92>
 482:	ea 01       	movw	r28, r20
 484:	f5 cf       	rjmp	.-22     	; 0x470 <free+0x44>
 486:	d3 83       	std	Z+3, r29	; 0x03
 488:	c2 83       	std	Z+2, r28	; 0x02
 48a:	40 81       	ld	r20, Z
 48c:	51 81       	ldd	r21, Z+1	; 0x01
 48e:	84 0f       	add	r24, r20
 490:	95 1f       	adc	r25, r21
 492:	c8 17       	cp	r28, r24
 494:	d9 07       	cpc	r29, r25
 496:	59 f4       	brne	.+22     	; 0x4ae <free+0x82>
 498:	88 81       	ld	r24, Y
 49a:	99 81       	ldd	r25, Y+1	; 0x01
 49c:	84 0f       	add	r24, r20
 49e:	95 1f       	adc	r25, r21
 4a0:	02 96       	adiw	r24, 0x02	; 2
 4a2:	91 83       	std	Z+1, r25	; 0x01
 4a4:	80 83       	st	Z, r24
 4a6:	8a 81       	ldd	r24, Y+2	; 0x02
 4a8:	9b 81       	ldd	r25, Y+3	; 0x03
 4aa:	93 83       	std	Z+3, r25	; 0x03
 4ac:	82 83       	std	Z+2, r24	; 0x02
 4ae:	21 15       	cp	r18, r1
 4b0:	31 05       	cpc	r19, r1
 4b2:	29 f4       	brne	.+10     	; 0x4be <free+0x92>
 4b4:	f0 93 25 01 	sts	0x0125, r31	; 0x800125 <__flp+0x1>
 4b8:	e0 93 24 01 	sts	0x0124, r30	; 0x800124 <__flp>
 4bc:	3d c0       	rjmp	.+122    	; 0x538 <free+0x10c>
 4be:	e9 01       	movw	r28, r18
 4c0:	fb 83       	std	Y+3, r31	; 0x03
 4c2:	ea 83       	std	Y+2, r30	; 0x02
 4c4:	49 91       	ld	r20, Y+
 4c6:	59 91       	ld	r21, Y+
 4c8:	c4 0f       	add	r28, r20
 4ca:	d5 1f       	adc	r29, r21
 4cc:	ec 17       	cp	r30, r28
 4ce:	fd 07       	cpc	r31, r29
 4d0:	61 f4       	brne	.+24     	; 0x4ea <free+0xbe>
 4d2:	80 81       	ld	r24, Z
 4d4:	91 81       	ldd	r25, Z+1	; 0x01
 4d6:	84 0f       	add	r24, r20
 4d8:	95 1f       	adc	r25, r21
 4da:	02 96       	adiw	r24, 0x02	; 2
 4dc:	e9 01       	movw	r28, r18
 4de:	99 83       	std	Y+1, r25	; 0x01
 4e0:	88 83       	st	Y, r24
 4e2:	82 81       	ldd	r24, Z+2	; 0x02
 4e4:	93 81       	ldd	r25, Z+3	; 0x03
 4e6:	9b 83       	std	Y+3, r25	; 0x03
 4e8:	8a 83       	std	Y+2, r24	; 0x02
 4ea:	e0 e0       	ldi	r30, 0x00	; 0
 4ec:	f0 e0       	ldi	r31, 0x00	; 0
 4ee:	12 96       	adiw	r26, 0x02	; 2
 4f0:	8d 91       	ld	r24, X+
 4f2:	9c 91       	ld	r25, X
 4f4:	13 97       	sbiw	r26, 0x03	; 3
 4f6:	00 97       	sbiw	r24, 0x00	; 0
 4f8:	19 f0       	breq	.+6      	; 0x500 <free+0xd4>
 4fa:	fd 01       	movw	r30, r26
 4fc:	dc 01       	movw	r26, r24
 4fe:	f7 cf       	rjmp	.-18     	; 0x4ee <free+0xc2>
 500:	8d 91       	ld	r24, X+
 502:	9c 91       	ld	r25, X
 504:	11 97       	sbiw	r26, 0x01	; 1
 506:	9d 01       	movw	r18, r26
 508:	2e 5f       	subi	r18, 0xFE	; 254
 50a:	3f 4f       	sbci	r19, 0xFF	; 255
 50c:	82 0f       	add	r24, r18
 50e:	93 1f       	adc	r25, r19
 510:	20 91 22 01 	lds	r18, 0x0122	; 0x800122 <__brkval>
 514:	30 91 23 01 	lds	r19, 0x0123	; 0x800123 <__brkval+0x1>
 518:	28 17       	cp	r18, r24
 51a:	39 07       	cpc	r19, r25
 51c:	69 f4       	brne	.+26     	; 0x538 <free+0x10c>
 51e:	30 97       	sbiw	r30, 0x00	; 0
 520:	29 f4       	brne	.+10     	; 0x52c <free+0x100>
 522:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <__flp+0x1>
 526:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <__flp>
 52a:	02 c0       	rjmp	.+4      	; 0x530 <free+0x104>
 52c:	13 82       	std	Z+3, r1	; 0x03
 52e:	12 82       	std	Z+2, r1	; 0x02
 530:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <__brkval+0x1>
 534:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <__brkval>
 538:	df 91       	pop	r29
 53a:	cf 91       	pop	r28
 53c:	08 95       	ret

0000053e <printf>:
 53e:	a0 e0       	ldi	r26, 0x00	; 0
 540:	b0 e0       	ldi	r27, 0x00	; 0
 542:	e5 ea       	ldi	r30, 0xA5	; 165
 544:	f2 e0       	ldi	r31, 0x02	; 2
 546:	0c 94 56 05 	jmp	0xaac	; 0xaac <__prologue_saves__+0x20>
 54a:	ae 01       	movw	r20, r28
 54c:	4b 5f       	subi	r20, 0xFB	; 251
 54e:	5f 4f       	sbci	r21, 0xFF	; 255
 550:	fa 01       	movw	r30, r20
 552:	61 91       	ld	r22, Z+
 554:	71 91       	ld	r23, Z+
 556:	af 01       	movw	r20, r30
 558:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <__iob+0x2>
 55c:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <__iob+0x3>
 560:	0e 94 b5 02 	call	0x56a	; 0x56a <vfprintf>
 564:	e2 e0       	ldi	r30, 0x02	; 2
 566:	0c 94 72 05 	jmp	0xae4	; 0xae4 <__epilogue_restores__+0x20>

0000056a <vfprintf>:
 56a:	ab e0       	ldi	r26, 0x0B	; 11
 56c:	b0 e0       	ldi	r27, 0x00	; 0
 56e:	eb eb       	ldi	r30, 0xBB	; 187
 570:	f2 e0       	ldi	r31, 0x02	; 2
 572:	0c 94 46 05 	jmp	0xa8c	; 0xa8c <__prologue_saves__>
 576:	6c 01       	movw	r12, r24
 578:	7b 01       	movw	r14, r22
 57a:	8a 01       	movw	r16, r20
 57c:	fc 01       	movw	r30, r24
 57e:	17 82       	std	Z+7, r1	; 0x07
 580:	16 82       	std	Z+6, r1	; 0x06
 582:	83 81       	ldd	r24, Z+3	; 0x03
 584:	81 ff       	sbrs	r24, 1
 586:	cc c1       	rjmp	.+920    	; 0x920 <__stack+0x21>
 588:	ce 01       	movw	r24, r28
 58a:	01 96       	adiw	r24, 0x01	; 1
 58c:	3c 01       	movw	r6, r24
 58e:	f6 01       	movw	r30, r12
 590:	93 81       	ldd	r25, Z+3	; 0x03
 592:	f7 01       	movw	r30, r14
 594:	93 fd       	sbrc	r25, 3
 596:	85 91       	lpm	r24, Z+
 598:	93 ff       	sbrs	r25, 3
 59a:	81 91       	ld	r24, Z+
 59c:	7f 01       	movw	r14, r30
 59e:	88 23       	and	r24, r24
 5a0:	09 f4       	brne	.+2      	; 0x5a4 <vfprintf+0x3a>
 5a2:	ba c1       	rjmp	.+884    	; 0x918 <__stack+0x19>
 5a4:	85 32       	cpi	r24, 0x25	; 37
 5a6:	39 f4       	brne	.+14     	; 0x5b6 <vfprintf+0x4c>
 5a8:	93 fd       	sbrc	r25, 3
 5aa:	85 91       	lpm	r24, Z+
 5ac:	93 ff       	sbrs	r25, 3
 5ae:	81 91       	ld	r24, Z+
 5b0:	7f 01       	movw	r14, r30
 5b2:	85 32       	cpi	r24, 0x25	; 37
 5b4:	29 f4       	brne	.+10     	; 0x5c0 <vfprintf+0x56>
 5b6:	b6 01       	movw	r22, r12
 5b8:	90 e0       	ldi	r25, 0x00	; 0
 5ba:	0e 94 ac 04 	call	0x958	; 0x958 <fputc>
 5be:	e7 cf       	rjmp	.-50     	; 0x58e <vfprintf+0x24>
 5c0:	91 2c       	mov	r9, r1
 5c2:	21 2c       	mov	r2, r1
 5c4:	31 2c       	mov	r3, r1
 5c6:	ff e1       	ldi	r31, 0x1F	; 31
 5c8:	f3 15       	cp	r31, r3
 5ca:	d8 f0       	brcs	.+54     	; 0x602 <vfprintf+0x98>
 5cc:	8b 32       	cpi	r24, 0x2B	; 43
 5ce:	79 f0       	breq	.+30     	; 0x5ee <vfprintf+0x84>
 5d0:	38 f4       	brcc	.+14     	; 0x5e0 <vfprintf+0x76>
 5d2:	80 32       	cpi	r24, 0x20	; 32
 5d4:	79 f0       	breq	.+30     	; 0x5f4 <vfprintf+0x8a>
 5d6:	83 32       	cpi	r24, 0x23	; 35
 5d8:	a1 f4       	brne	.+40     	; 0x602 <vfprintf+0x98>
 5da:	23 2d       	mov	r18, r3
 5dc:	20 61       	ori	r18, 0x10	; 16
 5de:	1d c0       	rjmp	.+58     	; 0x61a <vfprintf+0xb0>
 5e0:	8d 32       	cpi	r24, 0x2D	; 45
 5e2:	61 f0       	breq	.+24     	; 0x5fc <vfprintf+0x92>
 5e4:	80 33       	cpi	r24, 0x30	; 48
 5e6:	69 f4       	brne	.+26     	; 0x602 <vfprintf+0x98>
 5e8:	23 2d       	mov	r18, r3
 5ea:	21 60       	ori	r18, 0x01	; 1
 5ec:	16 c0       	rjmp	.+44     	; 0x61a <vfprintf+0xb0>
 5ee:	83 2d       	mov	r24, r3
 5f0:	82 60       	ori	r24, 0x02	; 2
 5f2:	38 2e       	mov	r3, r24
 5f4:	e3 2d       	mov	r30, r3
 5f6:	e4 60       	ori	r30, 0x04	; 4
 5f8:	3e 2e       	mov	r3, r30
 5fa:	2a c0       	rjmp	.+84     	; 0x650 <vfprintf+0xe6>
 5fc:	f3 2d       	mov	r31, r3
 5fe:	f8 60       	ori	r31, 0x08	; 8
 600:	1d c0       	rjmp	.+58     	; 0x63c <vfprintf+0xd2>
 602:	37 fc       	sbrc	r3, 7
 604:	2d c0       	rjmp	.+90     	; 0x660 <vfprintf+0xf6>
 606:	20 ed       	ldi	r18, 0xD0	; 208
 608:	28 0f       	add	r18, r24
 60a:	2a 30       	cpi	r18, 0x0A	; 10
 60c:	40 f0       	brcs	.+16     	; 0x61e <vfprintf+0xb4>
 60e:	8e 32       	cpi	r24, 0x2E	; 46
 610:	b9 f4       	brne	.+46     	; 0x640 <vfprintf+0xd6>
 612:	36 fc       	sbrc	r3, 6
 614:	81 c1       	rjmp	.+770    	; 0x918 <__stack+0x19>
 616:	23 2d       	mov	r18, r3
 618:	20 64       	ori	r18, 0x40	; 64
 61a:	32 2e       	mov	r3, r18
 61c:	19 c0       	rjmp	.+50     	; 0x650 <vfprintf+0xe6>
 61e:	36 fe       	sbrs	r3, 6
 620:	06 c0       	rjmp	.+12     	; 0x62e <vfprintf+0xc4>
 622:	8a e0       	ldi	r24, 0x0A	; 10
 624:	98 9e       	mul	r9, r24
 626:	20 0d       	add	r18, r0
 628:	11 24       	eor	r1, r1
 62a:	92 2e       	mov	r9, r18
 62c:	11 c0       	rjmp	.+34     	; 0x650 <vfprintf+0xe6>
 62e:	ea e0       	ldi	r30, 0x0A	; 10
 630:	2e 9e       	mul	r2, r30
 632:	20 0d       	add	r18, r0
 634:	11 24       	eor	r1, r1
 636:	22 2e       	mov	r2, r18
 638:	f3 2d       	mov	r31, r3
 63a:	f0 62       	ori	r31, 0x20	; 32
 63c:	3f 2e       	mov	r3, r31
 63e:	08 c0       	rjmp	.+16     	; 0x650 <vfprintf+0xe6>
 640:	8c 36       	cpi	r24, 0x6C	; 108
 642:	21 f4       	brne	.+8      	; 0x64c <vfprintf+0xe2>
 644:	83 2d       	mov	r24, r3
 646:	80 68       	ori	r24, 0x80	; 128
 648:	38 2e       	mov	r3, r24
 64a:	02 c0       	rjmp	.+4      	; 0x650 <vfprintf+0xe6>
 64c:	88 36       	cpi	r24, 0x68	; 104
 64e:	41 f4       	brne	.+16     	; 0x660 <vfprintf+0xf6>
 650:	f7 01       	movw	r30, r14
 652:	93 fd       	sbrc	r25, 3
 654:	85 91       	lpm	r24, Z+
 656:	93 ff       	sbrs	r25, 3
 658:	81 91       	ld	r24, Z+
 65a:	7f 01       	movw	r14, r30
 65c:	81 11       	cpse	r24, r1
 65e:	b3 cf       	rjmp	.-154    	; 0x5c6 <vfprintf+0x5c>
 660:	98 2f       	mov	r25, r24
 662:	9f 7d       	andi	r25, 0xDF	; 223
 664:	95 54       	subi	r25, 0x45	; 69
 666:	93 30       	cpi	r25, 0x03	; 3
 668:	28 f4       	brcc	.+10     	; 0x674 <vfprintf+0x10a>
 66a:	0c 5f       	subi	r16, 0xFC	; 252
 66c:	1f 4f       	sbci	r17, 0xFF	; 255
 66e:	9f e3       	ldi	r25, 0x3F	; 63
 670:	99 83       	std	Y+1, r25	; 0x01
 672:	0d c0       	rjmp	.+26     	; 0x68e <vfprintf+0x124>
 674:	83 36       	cpi	r24, 0x63	; 99
 676:	31 f0       	breq	.+12     	; 0x684 <vfprintf+0x11a>
 678:	83 37       	cpi	r24, 0x73	; 115
 67a:	71 f0       	breq	.+28     	; 0x698 <vfprintf+0x12e>
 67c:	83 35       	cpi	r24, 0x53	; 83
 67e:	09 f0       	breq	.+2      	; 0x682 <vfprintf+0x118>
 680:	59 c0       	rjmp	.+178    	; 0x734 <vfprintf+0x1ca>
 682:	21 c0       	rjmp	.+66     	; 0x6c6 <vfprintf+0x15c>
 684:	f8 01       	movw	r30, r16
 686:	80 81       	ld	r24, Z
 688:	89 83       	std	Y+1, r24	; 0x01
 68a:	0e 5f       	subi	r16, 0xFE	; 254
 68c:	1f 4f       	sbci	r17, 0xFF	; 255
 68e:	88 24       	eor	r8, r8
 690:	83 94       	inc	r8
 692:	91 2c       	mov	r9, r1
 694:	53 01       	movw	r10, r6
 696:	13 c0       	rjmp	.+38     	; 0x6be <vfprintf+0x154>
 698:	28 01       	movw	r4, r16
 69a:	f2 e0       	ldi	r31, 0x02	; 2
 69c:	4f 0e       	add	r4, r31
 69e:	51 1c       	adc	r5, r1
 6a0:	f8 01       	movw	r30, r16
 6a2:	a0 80       	ld	r10, Z
 6a4:	b1 80       	ldd	r11, Z+1	; 0x01
 6a6:	36 fe       	sbrs	r3, 6
 6a8:	03 c0       	rjmp	.+6      	; 0x6b0 <vfprintf+0x146>
 6aa:	69 2d       	mov	r22, r9
 6ac:	70 e0       	ldi	r23, 0x00	; 0
 6ae:	02 c0       	rjmp	.+4      	; 0x6b4 <vfprintf+0x14a>
 6b0:	6f ef       	ldi	r22, 0xFF	; 255
 6b2:	7f ef       	ldi	r23, 0xFF	; 255
 6b4:	c5 01       	movw	r24, r10
 6b6:	0e 94 a1 04 	call	0x942	; 0x942 <strnlen>
 6ba:	4c 01       	movw	r8, r24
 6bc:	82 01       	movw	r16, r4
 6be:	f3 2d       	mov	r31, r3
 6c0:	ff 77       	andi	r31, 0x7F	; 127
 6c2:	3f 2e       	mov	r3, r31
 6c4:	16 c0       	rjmp	.+44     	; 0x6f2 <vfprintf+0x188>
 6c6:	28 01       	movw	r4, r16
 6c8:	22 e0       	ldi	r18, 0x02	; 2
 6ca:	42 0e       	add	r4, r18
 6cc:	51 1c       	adc	r5, r1
 6ce:	f8 01       	movw	r30, r16
 6d0:	a0 80       	ld	r10, Z
 6d2:	b1 80       	ldd	r11, Z+1	; 0x01
 6d4:	36 fe       	sbrs	r3, 6
 6d6:	03 c0       	rjmp	.+6      	; 0x6de <vfprintf+0x174>
 6d8:	69 2d       	mov	r22, r9
 6da:	70 e0       	ldi	r23, 0x00	; 0
 6dc:	02 c0       	rjmp	.+4      	; 0x6e2 <vfprintf+0x178>
 6de:	6f ef       	ldi	r22, 0xFF	; 255
 6e0:	7f ef       	ldi	r23, 0xFF	; 255
 6e2:	c5 01       	movw	r24, r10
 6e4:	0e 94 96 04 	call	0x92c	; 0x92c <strnlen_P>
 6e8:	4c 01       	movw	r8, r24
 6ea:	f3 2d       	mov	r31, r3
 6ec:	f0 68       	ori	r31, 0x80	; 128
 6ee:	3f 2e       	mov	r3, r31
 6f0:	82 01       	movw	r16, r4
 6f2:	33 fc       	sbrc	r3, 3
 6f4:	1b c0       	rjmp	.+54     	; 0x72c <vfprintf+0x1c2>
 6f6:	82 2d       	mov	r24, r2
 6f8:	90 e0       	ldi	r25, 0x00	; 0
 6fa:	88 16       	cp	r8, r24
 6fc:	99 06       	cpc	r9, r25
 6fe:	b0 f4       	brcc	.+44     	; 0x72c <vfprintf+0x1c2>
 700:	b6 01       	movw	r22, r12
 702:	80 e2       	ldi	r24, 0x20	; 32
 704:	90 e0       	ldi	r25, 0x00	; 0
 706:	0e 94 ac 04 	call	0x958	; 0x958 <fputc>
 70a:	2a 94       	dec	r2
 70c:	f4 cf       	rjmp	.-24     	; 0x6f6 <vfprintf+0x18c>
 70e:	f5 01       	movw	r30, r10
 710:	37 fc       	sbrc	r3, 7
 712:	85 91       	lpm	r24, Z+
 714:	37 fe       	sbrs	r3, 7
 716:	81 91       	ld	r24, Z+
 718:	5f 01       	movw	r10, r30
 71a:	b6 01       	movw	r22, r12
 71c:	90 e0       	ldi	r25, 0x00	; 0
 71e:	0e 94 ac 04 	call	0x958	; 0x958 <fputc>
 722:	21 10       	cpse	r2, r1
 724:	2a 94       	dec	r2
 726:	21 e0       	ldi	r18, 0x01	; 1
 728:	82 1a       	sub	r8, r18
 72a:	91 08       	sbc	r9, r1
 72c:	81 14       	cp	r8, r1
 72e:	91 04       	cpc	r9, r1
 730:	71 f7       	brne	.-36     	; 0x70e <vfprintf+0x1a4>
 732:	e8 c0       	rjmp	.+464    	; 0x904 <__stack+0x5>
 734:	84 36       	cpi	r24, 0x64	; 100
 736:	11 f0       	breq	.+4      	; 0x73c <vfprintf+0x1d2>
 738:	89 36       	cpi	r24, 0x69	; 105
 73a:	41 f5       	brne	.+80     	; 0x78c <vfprintf+0x222>
 73c:	f8 01       	movw	r30, r16
 73e:	37 fe       	sbrs	r3, 7
 740:	07 c0       	rjmp	.+14     	; 0x750 <vfprintf+0x1e6>
 742:	60 81       	ld	r22, Z
 744:	71 81       	ldd	r23, Z+1	; 0x01
 746:	82 81       	ldd	r24, Z+2	; 0x02
 748:	93 81       	ldd	r25, Z+3	; 0x03
 74a:	0c 5f       	subi	r16, 0xFC	; 252
 74c:	1f 4f       	sbci	r17, 0xFF	; 255
 74e:	08 c0       	rjmp	.+16     	; 0x760 <vfprintf+0x1f6>
 750:	60 81       	ld	r22, Z
 752:	71 81       	ldd	r23, Z+1	; 0x01
 754:	07 2e       	mov	r0, r23
 756:	00 0c       	add	r0, r0
 758:	88 0b       	sbc	r24, r24
 75a:	99 0b       	sbc	r25, r25
 75c:	0e 5f       	subi	r16, 0xFE	; 254
 75e:	1f 4f       	sbci	r17, 0xFF	; 255
 760:	f3 2d       	mov	r31, r3
 762:	ff 76       	andi	r31, 0x6F	; 111
 764:	3f 2e       	mov	r3, r31
 766:	97 ff       	sbrs	r25, 7
 768:	09 c0       	rjmp	.+18     	; 0x77c <vfprintf+0x212>
 76a:	90 95       	com	r25
 76c:	80 95       	com	r24
 76e:	70 95       	com	r23
 770:	61 95       	neg	r22
 772:	7f 4f       	sbci	r23, 0xFF	; 255
 774:	8f 4f       	sbci	r24, 0xFF	; 255
 776:	9f 4f       	sbci	r25, 0xFF	; 255
 778:	f0 68       	ori	r31, 0x80	; 128
 77a:	3f 2e       	mov	r3, r31
 77c:	2a e0       	ldi	r18, 0x0A	; 10
 77e:	30 e0       	ldi	r19, 0x00	; 0
 780:	a3 01       	movw	r20, r6
 782:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <__ultoa_invert>
 786:	88 2e       	mov	r8, r24
 788:	86 18       	sub	r8, r6
 78a:	45 c0       	rjmp	.+138    	; 0x816 <vfprintf+0x2ac>
 78c:	85 37       	cpi	r24, 0x75	; 117
 78e:	31 f4       	brne	.+12     	; 0x79c <vfprintf+0x232>
 790:	23 2d       	mov	r18, r3
 792:	2f 7e       	andi	r18, 0xEF	; 239
 794:	b2 2e       	mov	r11, r18
 796:	2a e0       	ldi	r18, 0x0A	; 10
 798:	30 e0       	ldi	r19, 0x00	; 0
 79a:	25 c0       	rjmp	.+74     	; 0x7e6 <vfprintf+0x27c>
 79c:	93 2d       	mov	r25, r3
 79e:	99 7f       	andi	r25, 0xF9	; 249
 7a0:	b9 2e       	mov	r11, r25
 7a2:	8f 36       	cpi	r24, 0x6F	; 111
 7a4:	c1 f0       	breq	.+48     	; 0x7d6 <vfprintf+0x26c>
 7a6:	18 f4       	brcc	.+6      	; 0x7ae <vfprintf+0x244>
 7a8:	88 35       	cpi	r24, 0x58	; 88
 7aa:	79 f0       	breq	.+30     	; 0x7ca <vfprintf+0x260>
 7ac:	b5 c0       	rjmp	.+362    	; 0x918 <__stack+0x19>
 7ae:	80 37       	cpi	r24, 0x70	; 112
 7b0:	19 f0       	breq	.+6      	; 0x7b8 <vfprintf+0x24e>
 7b2:	88 37       	cpi	r24, 0x78	; 120
 7b4:	21 f0       	breq	.+8      	; 0x7be <vfprintf+0x254>
 7b6:	b0 c0       	rjmp	.+352    	; 0x918 <__stack+0x19>
 7b8:	e9 2f       	mov	r30, r25
 7ba:	e0 61       	ori	r30, 0x10	; 16
 7bc:	be 2e       	mov	r11, r30
 7be:	b4 fe       	sbrs	r11, 4
 7c0:	0d c0       	rjmp	.+26     	; 0x7dc <vfprintf+0x272>
 7c2:	fb 2d       	mov	r31, r11
 7c4:	f4 60       	ori	r31, 0x04	; 4
 7c6:	bf 2e       	mov	r11, r31
 7c8:	09 c0       	rjmp	.+18     	; 0x7dc <vfprintf+0x272>
 7ca:	34 fe       	sbrs	r3, 4
 7cc:	0a c0       	rjmp	.+20     	; 0x7e2 <vfprintf+0x278>
 7ce:	29 2f       	mov	r18, r25
 7d0:	26 60       	ori	r18, 0x06	; 6
 7d2:	b2 2e       	mov	r11, r18
 7d4:	06 c0       	rjmp	.+12     	; 0x7e2 <vfprintf+0x278>
 7d6:	28 e0       	ldi	r18, 0x08	; 8
 7d8:	30 e0       	ldi	r19, 0x00	; 0
 7da:	05 c0       	rjmp	.+10     	; 0x7e6 <vfprintf+0x27c>
 7dc:	20 e1       	ldi	r18, 0x10	; 16
 7de:	30 e0       	ldi	r19, 0x00	; 0
 7e0:	02 c0       	rjmp	.+4      	; 0x7e6 <vfprintf+0x27c>
 7e2:	20 e1       	ldi	r18, 0x10	; 16
 7e4:	32 e0       	ldi	r19, 0x02	; 2
 7e6:	f8 01       	movw	r30, r16
 7e8:	b7 fe       	sbrs	r11, 7
 7ea:	07 c0       	rjmp	.+14     	; 0x7fa <vfprintf+0x290>
 7ec:	60 81       	ld	r22, Z
 7ee:	71 81       	ldd	r23, Z+1	; 0x01
 7f0:	82 81       	ldd	r24, Z+2	; 0x02
 7f2:	93 81       	ldd	r25, Z+3	; 0x03
 7f4:	0c 5f       	subi	r16, 0xFC	; 252
 7f6:	1f 4f       	sbci	r17, 0xFF	; 255
 7f8:	06 c0       	rjmp	.+12     	; 0x806 <vfprintf+0x29c>
 7fa:	60 81       	ld	r22, Z
 7fc:	71 81       	ldd	r23, Z+1	; 0x01
 7fe:	80 e0       	ldi	r24, 0x00	; 0
 800:	90 e0       	ldi	r25, 0x00	; 0
 802:	0e 5f       	subi	r16, 0xFE	; 254
 804:	1f 4f       	sbci	r17, 0xFF	; 255
 806:	a3 01       	movw	r20, r6
 808:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <__ultoa_invert>
 80c:	88 2e       	mov	r8, r24
 80e:	86 18       	sub	r8, r6
 810:	fb 2d       	mov	r31, r11
 812:	ff 77       	andi	r31, 0x7F	; 127
 814:	3f 2e       	mov	r3, r31
 816:	36 fe       	sbrs	r3, 6
 818:	0d c0       	rjmp	.+26     	; 0x834 <vfprintf+0x2ca>
 81a:	23 2d       	mov	r18, r3
 81c:	2e 7f       	andi	r18, 0xFE	; 254
 81e:	a2 2e       	mov	r10, r18
 820:	89 14       	cp	r8, r9
 822:	58 f4       	brcc	.+22     	; 0x83a <vfprintf+0x2d0>
 824:	34 fe       	sbrs	r3, 4
 826:	0b c0       	rjmp	.+22     	; 0x83e <vfprintf+0x2d4>
 828:	32 fc       	sbrc	r3, 2
 82a:	09 c0       	rjmp	.+18     	; 0x83e <vfprintf+0x2d4>
 82c:	83 2d       	mov	r24, r3
 82e:	8e 7e       	andi	r24, 0xEE	; 238
 830:	a8 2e       	mov	r10, r24
 832:	05 c0       	rjmp	.+10     	; 0x83e <vfprintf+0x2d4>
 834:	b8 2c       	mov	r11, r8
 836:	a3 2c       	mov	r10, r3
 838:	03 c0       	rjmp	.+6      	; 0x840 <vfprintf+0x2d6>
 83a:	b8 2c       	mov	r11, r8
 83c:	01 c0       	rjmp	.+2      	; 0x840 <vfprintf+0x2d6>
 83e:	b9 2c       	mov	r11, r9
 840:	a4 fe       	sbrs	r10, 4
 842:	0f c0       	rjmp	.+30     	; 0x862 <vfprintf+0x2f8>
 844:	fe 01       	movw	r30, r28
 846:	e8 0d       	add	r30, r8
 848:	f1 1d       	adc	r31, r1
 84a:	80 81       	ld	r24, Z
 84c:	80 33       	cpi	r24, 0x30	; 48
 84e:	21 f4       	brne	.+8      	; 0x858 <vfprintf+0x2ee>
 850:	9a 2d       	mov	r25, r10
 852:	99 7e       	andi	r25, 0xE9	; 233
 854:	a9 2e       	mov	r10, r25
 856:	09 c0       	rjmp	.+18     	; 0x86a <vfprintf+0x300>
 858:	a2 fe       	sbrs	r10, 2
 85a:	06 c0       	rjmp	.+12     	; 0x868 <vfprintf+0x2fe>
 85c:	b3 94       	inc	r11
 85e:	b3 94       	inc	r11
 860:	04 c0       	rjmp	.+8      	; 0x86a <vfprintf+0x300>
 862:	8a 2d       	mov	r24, r10
 864:	86 78       	andi	r24, 0x86	; 134
 866:	09 f0       	breq	.+2      	; 0x86a <vfprintf+0x300>
 868:	b3 94       	inc	r11
 86a:	a3 fc       	sbrc	r10, 3
 86c:	11 c0       	rjmp	.+34     	; 0x890 <vfprintf+0x326>
 86e:	a0 fe       	sbrs	r10, 0
 870:	06 c0       	rjmp	.+12     	; 0x87e <vfprintf+0x314>
 872:	b2 14       	cp	r11, r2
 874:	88 f4       	brcc	.+34     	; 0x898 <vfprintf+0x32e>
 876:	28 0c       	add	r2, r8
 878:	92 2c       	mov	r9, r2
 87a:	9b 18       	sub	r9, r11
 87c:	0e c0       	rjmp	.+28     	; 0x89a <vfprintf+0x330>
 87e:	b2 14       	cp	r11, r2
 880:	60 f4       	brcc	.+24     	; 0x89a <vfprintf+0x330>
 882:	b6 01       	movw	r22, r12
 884:	80 e2       	ldi	r24, 0x20	; 32
 886:	90 e0       	ldi	r25, 0x00	; 0
 888:	0e 94 ac 04 	call	0x958	; 0x958 <fputc>
 88c:	b3 94       	inc	r11
 88e:	f7 cf       	rjmp	.-18     	; 0x87e <vfprintf+0x314>
 890:	b2 14       	cp	r11, r2
 892:	18 f4       	brcc	.+6      	; 0x89a <vfprintf+0x330>
 894:	2b 18       	sub	r2, r11
 896:	02 c0       	rjmp	.+4      	; 0x89c <vfprintf+0x332>
 898:	98 2c       	mov	r9, r8
 89a:	21 2c       	mov	r2, r1
 89c:	a4 fe       	sbrs	r10, 4
 89e:	10 c0       	rjmp	.+32     	; 0x8c0 <vfprintf+0x356>
 8a0:	b6 01       	movw	r22, r12
 8a2:	80 e3       	ldi	r24, 0x30	; 48
 8a4:	90 e0       	ldi	r25, 0x00	; 0
 8a6:	0e 94 ac 04 	call	0x958	; 0x958 <fputc>
 8aa:	a2 fe       	sbrs	r10, 2
 8ac:	17 c0       	rjmp	.+46     	; 0x8dc <vfprintf+0x372>
 8ae:	a1 fc       	sbrc	r10, 1
 8b0:	03 c0       	rjmp	.+6      	; 0x8b8 <vfprintf+0x34e>
 8b2:	88 e7       	ldi	r24, 0x78	; 120
 8b4:	90 e0       	ldi	r25, 0x00	; 0
 8b6:	02 c0       	rjmp	.+4      	; 0x8bc <vfprintf+0x352>
 8b8:	88 e5       	ldi	r24, 0x58	; 88
 8ba:	90 e0       	ldi	r25, 0x00	; 0
 8bc:	b6 01       	movw	r22, r12
 8be:	0c c0       	rjmp	.+24     	; 0x8d8 <vfprintf+0x36e>
 8c0:	8a 2d       	mov	r24, r10
 8c2:	86 78       	andi	r24, 0x86	; 134
 8c4:	59 f0       	breq	.+22     	; 0x8dc <vfprintf+0x372>
 8c6:	a1 fe       	sbrs	r10, 1
 8c8:	02 c0       	rjmp	.+4      	; 0x8ce <vfprintf+0x364>
 8ca:	8b e2       	ldi	r24, 0x2B	; 43
 8cc:	01 c0       	rjmp	.+2      	; 0x8d0 <vfprintf+0x366>
 8ce:	80 e2       	ldi	r24, 0x20	; 32
 8d0:	a7 fc       	sbrc	r10, 7
 8d2:	8d e2       	ldi	r24, 0x2D	; 45
 8d4:	b6 01       	movw	r22, r12
 8d6:	90 e0       	ldi	r25, 0x00	; 0
 8d8:	0e 94 ac 04 	call	0x958	; 0x958 <fputc>
 8dc:	89 14       	cp	r8, r9
 8de:	38 f4       	brcc	.+14     	; 0x8ee <vfprintf+0x384>
 8e0:	b6 01       	movw	r22, r12
 8e2:	80 e3       	ldi	r24, 0x30	; 48
 8e4:	90 e0       	ldi	r25, 0x00	; 0
 8e6:	0e 94 ac 04 	call	0x958	; 0x958 <fputc>
 8ea:	9a 94       	dec	r9
 8ec:	f7 cf       	rjmp	.-18     	; 0x8dc <vfprintf+0x372>
 8ee:	8a 94       	dec	r8
 8f0:	f3 01       	movw	r30, r6
 8f2:	e8 0d       	add	r30, r8
 8f4:	f1 1d       	adc	r31, r1
 8f6:	80 81       	ld	r24, Z
 8f8:	b6 01       	movw	r22, r12
 8fa:	90 e0       	ldi	r25, 0x00	; 0
 8fc:	0e 94 ac 04 	call	0x958	; 0x958 <fputc>
 900:	81 10       	cpse	r8, r1
 902:	f5 cf       	rjmp	.-22     	; 0x8ee <vfprintf+0x384>
 904:	22 20       	and	r2, r2
 906:	09 f4       	brne	.+2      	; 0x90a <__stack+0xb>
 908:	42 ce       	rjmp	.-892    	; 0x58e <vfprintf+0x24>
 90a:	b6 01       	movw	r22, r12
 90c:	80 e2       	ldi	r24, 0x20	; 32
 90e:	90 e0       	ldi	r25, 0x00	; 0
 910:	0e 94 ac 04 	call	0x958	; 0x958 <fputc>
 914:	2a 94       	dec	r2
 916:	f6 cf       	rjmp	.-20     	; 0x904 <__stack+0x5>
 918:	f6 01       	movw	r30, r12
 91a:	86 81       	ldd	r24, Z+6	; 0x06
 91c:	97 81       	ldd	r25, Z+7	; 0x07
 91e:	02 c0       	rjmp	.+4      	; 0x924 <__stack+0x25>
 920:	8f ef       	ldi	r24, 0xFF	; 255
 922:	9f ef       	ldi	r25, 0xFF	; 255
 924:	2b 96       	adiw	r28, 0x0b	; 11
 926:	e2 e1       	ldi	r30, 0x12	; 18
 928:	0c 94 62 05 	jmp	0xac4	; 0xac4 <__epilogue_restores__>

0000092c <strnlen_P>:
 92c:	fc 01       	movw	r30, r24
 92e:	05 90       	lpm	r0, Z+
 930:	61 50       	subi	r22, 0x01	; 1
 932:	70 40       	sbci	r23, 0x00	; 0
 934:	01 10       	cpse	r0, r1
 936:	d8 f7       	brcc	.-10     	; 0x92e <strnlen_P+0x2>
 938:	80 95       	com	r24
 93a:	90 95       	com	r25
 93c:	8e 0f       	add	r24, r30
 93e:	9f 1f       	adc	r25, r31
 940:	08 95       	ret

00000942 <strnlen>:
 942:	fc 01       	movw	r30, r24
 944:	61 50       	subi	r22, 0x01	; 1
 946:	70 40       	sbci	r23, 0x00	; 0
 948:	01 90       	ld	r0, Z+
 94a:	01 10       	cpse	r0, r1
 94c:	d8 f7       	brcc	.-10     	; 0x944 <strnlen+0x2>
 94e:	80 95       	com	r24
 950:	90 95       	com	r25
 952:	8e 0f       	add	r24, r30
 954:	9f 1f       	adc	r25, r31
 956:	08 95       	ret

00000958 <fputc>:
 958:	0f 93       	push	r16
 95a:	1f 93       	push	r17
 95c:	cf 93       	push	r28
 95e:	df 93       	push	r29
 960:	fb 01       	movw	r30, r22
 962:	23 81       	ldd	r18, Z+3	; 0x03
 964:	21 fd       	sbrc	r18, 1
 966:	03 c0       	rjmp	.+6      	; 0x96e <fputc+0x16>
 968:	8f ef       	ldi	r24, 0xFF	; 255
 96a:	9f ef       	ldi	r25, 0xFF	; 255
 96c:	2c c0       	rjmp	.+88     	; 0x9c6 <fputc+0x6e>
 96e:	22 ff       	sbrs	r18, 2
 970:	16 c0       	rjmp	.+44     	; 0x99e <fputc+0x46>
 972:	46 81       	ldd	r20, Z+6	; 0x06
 974:	57 81       	ldd	r21, Z+7	; 0x07
 976:	24 81       	ldd	r18, Z+4	; 0x04
 978:	35 81       	ldd	r19, Z+5	; 0x05
 97a:	42 17       	cp	r20, r18
 97c:	53 07       	cpc	r21, r19
 97e:	44 f4       	brge	.+16     	; 0x990 <fputc+0x38>
 980:	a0 81       	ld	r26, Z
 982:	b1 81       	ldd	r27, Z+1	; 0x01
 984:	9d 01       	movw	r18, r26
 986:	2f 5f       	subi	r18, 0xFF	; 255
 988:	3f 4f       	sbci	r19, 0xFF	; 255
 98a:	31 83       	std	Z+1, r19	; 0x01
 98c:	20 83       	st	Z, r18
 98e:	8c 93       	st	X, r24
 990:	26 81       	ldd	r18, Z+6	; 0x06
 992:	37 81       	ldd	r19, Z+7	; 0x07
 994:	2f 5f       	subi	r18, 0xFF	; 255
 996:	3f 4f       	sbci	r19, 0xFF	; 255
 998:	37 83       	std	Z+7, r19	; 0x07
 99a:	26 83       	std	Z+6, r18	; 0x06
 99c:	14 c0       	rjmp	.+40     	; 0x9c6 <fputc+0x6e>
 99e:	8b 01       	movw	r16, r22
 9a0:	ec 01       	movw	r28, r24
 9a2:	fb 01       	movw	r30, r22
 9a4:	00 84       	ldd	r0, Z+8	; 0x08
 9a6:	f1 85       	ldd	r31, Z+9	; 0x09
 9a8:	e0 2d       	mov	r30, r0
 9aa:	09 95       	icall
 9ac:	89 2b       	or	r24, r25
 9ae:	e1 f6       	brne	.-72     	; 0x968 <fputc+0x10>
 9b0:	d8 01       	movw	r26, r16
 9b2:	16 96       	adiw	r26, 0x06	; 6
 9b4:	8d 91       	ld	r24, X+
 9b6:	9c 91       	ld	r25, X
 9b8:	17 97       	sbiw	r26, 0x07	; 7
 9ba:	01 96       	adiw	r24, 0x01	; 1
 9bc:	17 96       	adiw	r26, 0x07	; 7
 9be:	9c 93       	st	X, r25
 9c0:	8e 93       	st	-X, r24
 9c2:	16 97       	sbiw	r26, 0x06	; 6
 9c4:	ce 01       	movw	r24, r28
 9c6:	df 91       	pop	r29
 9c8:	cf 91       	pop	r28
 9ca:	1f 91       	pop	r17
 9cc:	0f 91       	pop	r16
 9ce:	08 95       	ret

000009d0 <__ultoa_invert>:
 9d0:	fa 01       	movw	r30, r20
 9d2:	aa 27       	eor	r26, r26
 9d4:	28 30       	cpi	r18, 0x08	; 8
 9d6:	51 f1       	breq	.+84     	; 0xa2c <__ultoa_invert+0x5c>
 9d8:	20 31       	cpi	r18, 0x10	; 16
 9da:	81 f1       	breq	.+96     	; 0xa3c <__ultoa_invert+0x6c>
 9dc:	e8 94       	clt
 9de:	6f 93       	push	r22
 9e0:	6e 7f       	andi	r22, 0xFE	; 254
 9e2:	6e 5f       	subi	r22, 0xFE	; 254
 9e4:	7f 4f       	sbci	r23, 0xFF	; 255
 9e6:	8f 4f       	sbci	r24, 0xFF	; 255
 9e8:	9f 4f       	sbci	r25, 0xFF	; 255
 9ea:	af 4f       	sbci	r26, 0xFF	; 255
 9ec:	b1 e0       	ldi	r27, 0x01	; 1
 9ee:	3e d0       	rcall	.+124    	; 0xa6c <__ultoa_invert+0x9c>
 9f0:	b4 e0       	ldi	r27, 0x04	; 4
 9f2:	3c d0       	rcall	.+120    	; 0xa6c <__ultoa_invert+0x9c>
 9f4:	67 0f       	add	r22, r23
 9f6:	78 1f       	adc	r23, r24
 9f8:	89 1f       	adc	r24, r25
 9fa:	9a 1f       	adc	r25, r26
 9fc:	a1 1d       	adc	r26, r1
 9fe:	68 0f       	add	r22, r24
 a00:	79 1f       	adc	r23, r25
 a02:	8a 1f       	adc	r24, r26
 a04:	91 1d       	adc	r25, r1
 a06:	a1 1d       	adc	r26, r1
 a08:	6a 0f       	add	r22, r26
 a0a:	71 1d       	adc	r23, r1
 a0c:	81 1d       	adc	r24, r1
 a0e:	91 1d       	adc	r25, r1
 a10:	a1 1d       	adc	r26, r1
 a12:	20 d0       	rcall	.+64     	; 0xa54 <__ultoa_invert+0x84>
 a14:	09 f4       	brne	.+2      	; 0xa18 <__ultoa_invert+0x48>
 a16:	68 94       	set
 a18:	3f 91       	pop	r19
 a1a:	2a e0       	ldi	r18, 0x0A	; 10
 a1c:	26 9f       	mul	r18, r22
 a1e:	11 24       	eor	r1, r1
 a20:	30 19       	sub	r19, r0
 a22:	30 5d       	subi	r19, 0xD0	; 208
 a24:	31 93       	st	Z+, r19
 a26:	de f6       	brtc	.-74     	; 0x9de <__ultoa_invert+0xe>
 a28:	cf 01       	movw	r24, r30
 a2a:	08 95       	ret
 a2c:	46 2f       	mov	r20, r22
 a2e:	47 70       	andi	r20, 0x07	; 7
 a30:	40 5d       	subi	r20, 0xD0	; 208
 a32:	41 93       	st	Z+, r20
 a34:	b3 e0       	ldi	r27, 0x03	; 3
 a36:	0f d0       	rcall	.+30     	; 0xa56 <__ultoa_invert+0x86>
 a38:	c9 f7       	brne	.-14     	; 0xa2c <__ultoa_invert+0x5c>
 a3a:	f6 cf       	rjmp	.-20     	; 0xa28 <__ultoa_invert+0x58>
 a3c:	46 2f       	mov	r20, r22
 a3e:	4f 70       	andi	r20, 0x0F	; 15
 a40:	40 5d       	subi	r20, 0xD0	; 208
 a42:	4a 33       	cpi	r20, 0x3A	; 58
 a44:	18 f0       	brcs	.+6      	; 0xa4c <__ultoa_invert+0x7c>
 a46:	49 5d       	subi	r20, 0xD9	; 217
 a48:	31 fd       	sbrc	r19, 1
 a4a:	40 52       	subi	r20, 0x20	; 32
 a4c:	41 93       	st	Z+, r20
 a4e:	02 d0       	rcall	.+4      	; 0xa54 <__ultoa_invert+0x84>
 a50:	a9 f7       	brne	.-22     	; 0xa3c <__ultoa_invert+0x6c>
 a52:	ea cf       	rjmp	.-44     	; 0xa28 <__ultoa_invert+0x58>
 a54:	b4 e0       	ldi	r27, 0x04	; 4
 a56:	a6 95       	lsr	r26
 a58:	97 95       	ror	r25
 a5a:	87 95       	ror	r24
 a5c:	77 95       	ror	r23
 a5e:	67 95       	ror	r22
 a60:	ba 95       	dec	r27
 a62:	c9 f7       	brne	.-14     	; 0xa56 <__ultoa_invert+0x86>
 a64:	00 97       	sbiw	r24, 0x00	; 0
 a66:	61 05       	cpc	r22, r1
 a68:	71 05       	cpc	r23, r1
 a6a:	08 95       	ret
 a6c:	9b 01       	movw	r18, r22
 a6e:	ac 01       	movw	r20, r24
 a70:	0a 2e       	mov	r0, r26
 a72:	06 94       	lsr	r0
 a74:	57 95       	ror	r21
 a76:	47 95       	ror	r20
 a78:	37 95       	ror	r19
 a7a:	27 95       	ror	r18
 a7c:	ba 95       	dec	r27
 a7e:	c9 f7       	brne	.-14     	; 0xa72 <__ultoa_invert+0xa2>
 a80:	62 0f       	add	r22, r18
 a82:	73 1f       	adc	r23, r19
 a84:	84 1f       	adc	r24, r20
 a86:	95 1f       	adc	r25, r21
 a88:	a0 1d       	adc	r26, r0
 a8a:	08 95       	ret

00000a8c <__prologue_saves__>:
 a8c:	2f 92       	push	r2
 a8e:	3f 92       	push	r3
 a90:	4f 92       	push	r4
 a92:	5f 92       	push	r5
 a94:	6f 92       	push	r6
 a96:	7f 92       	push	r7
 a98:	8f 92       	push	r8
 a9a:	9f 92       	push	r9
 a9c:	af 92       	push	r10
 a9e:	bf 92       	push	r11
 aa0:	cf 92       	push	r12
 aa2:	df 92       	push	r13
 aa4:	ef 92       	push	r14
 aa6:	ff 92       	push	r15
 aa8:	0f 93       	push	r16
 aaa:	1f 93       	push	r17
 aac:	cf 93       	push	r28
 aae:	df 93       	push	r29
 ab0:	cd b7       	in	r28, 0x3d	; 61
 ab2:	de b7       	in	r29, 0x3e	; 62
 ab4:	ca 1b       	sub	r28, r26
 ab6:	db 0b       	sbc	r29, r27
 ab8:	0f b6       	in	r0, 0x3f	; 63
 aba:	f8 94       	cli
 abc:	de bf       	out	0x3e, r29	; 62
 abe:	0f be       	out	0x3f, r0	; 63
 ac0:	cd bf       	out	0x3d, r28	; 61
 ac2:	09 94       	ijmp

00000ac4 <__epilogue_restores__>:
 ac4:	2a 88       	ldd	r2, Y+18	; 0x12
 ac6:	39 88       	ldd	r3, Y+17	; 0x11
 ac8:	48 88       	ldd	r4, Y+16	; 0x10
 aca:	5f 84       	ldd	r5, Y+15	; 0x0f
 acc:	6e 84       	ldd	r6, Y+14	; 0x0e
 ace:	7d 84       	ldd	r7, Y+13	; 0x0d
 ad0:	8c 84       	ldd	r8, Y+12	; 0x0c
 ad2:	9b 84       	ldd	r9, Y+11	; 0x0b
 ad4:	aa 84       	ldd	r10, Y+10	; 0x0a
 ad6:	b9 84       	ldd	r11, Y+9	; 0x09
 ad8:	c8 84       	ldd	r12, Y+8	; 0x08
 ada:	df 80       	ldd	r13, Y+7	; 0x07
 adc:	ee 80       	ldd	r14, Y+6	; 0x06
 ade:	fd 80       	ldd	r15, Y+5	; 0x05
 ae0:	0c 81       	ldd	r16, Y+4	; 0x04
 ae2:	1b 81       	ldd	r17, Y+3	; 0x03
 ae4:	aa 81       	ldd	r26, Y+2	; 0x02
 ae6:	b9 81       	ldd	r27, Y+1	; 0x01
 ae8:	ce 0f       	add	r28, r30
 aea:	d1 1d       	adc	r29, r1
 aec:	0f b6       	in	r0, 0x3f	; 63
 aee:	f8 94       	cli
 af0:	de bf       	out	0x3e, r29	; 62
 af2:	0f be       	out	0x3f, r0	; 63
 af4:	cd bf       	out	0x3d, r28	; 61
 af6:	ed 01       	movw	r28, r26
 af8:	08 95       	ret

00000afa <_exit>:
 afa:	f8 94       	cli

00000afc <__stop_program>:
 afc:	ff cf       	rjmp	.-2      	; 0xafc <__stop_program>
